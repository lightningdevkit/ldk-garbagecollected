/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_ldk_impl_bindings */

#ifndef _Included_org_ldk_impl_bindings
#define _Included_org_ldk_impl_bindings
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_ldk_impl_bindings
 * Method:    init
 * Signature: (Ljava/lang/Class;Ljava/lang/Class;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_init
  (JNIEnv *, jclass, jclass, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    init_class_cache
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_init_1class_1cache
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_lib_version_string
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_get_1lib_1version_1string
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_ldk_c_bindings_version
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_get_1ldk_1c_1bindings_1version
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_ldk_version
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_get_1ldk_1version
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    deref_bool
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_deref_1bool
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    deref_long
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_deref_1long
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    free_heap_ptr
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_free_1heap_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    read_bytes
 * Signature: (JJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_read_1bytes
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_u8_slice_bytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_get_1u8_1slice_1bytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    bytes_to_u8_vec
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_bytes_1to_1u8_1vec
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    new_txpointer_copy_data
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_new_1txpointer_1copy_1data
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    txpointer_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_txpointer_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    txpointer_get_buffer
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_txpointer_1get_1buffer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    vec_slice_len
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_vec_1slice_1len
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    new_empty_slice_vec
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_new_1empty_1slice_1vec
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxOut_get_script_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxOut_1get_1script_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxOut_get_value
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxOut_1get_1value
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_SecretKeyErrorZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1SecretKeyErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_SecretKeyErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Secp256k1Error;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1SecretKeyErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PublicKeyErrorZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PublicKeyErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PublicKeyErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Secp256k1Error;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PublicKeyErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_TxCreationKeysDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1TxCreationKeysDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_TxCreationKeysDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1TxCreationKeysDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelPublicKeysDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelPublicKeysDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelPublicKeysDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelPublicKeysDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_TxCreationKeysErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1TxCreationKeysErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_TxCreationKeysErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Secp256k1Error;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1TxCreationKeysErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_u32Z_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_u32Z;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1u32Z_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_HTLCOutputInCommitmentDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1HTLCOutputInCommitmentDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_HTLCOutputInCommitmentDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1HTLCOutputInCommitmentDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CounterpartyChannelTransactionParametersDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CounterpartyChannelTransactionParametersDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelTransactionParametersDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelTransactionParametersDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelTransactionParametersDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelTransactionParametersDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_HolderCommitmentTransactionDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1HolderCommitmentTransactionDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_HolderCommitmentTransactionDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1HolderCommitmentTransactionDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_BuiltCommitmentTransactionDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1BuiltCommitmentTransactionDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_BuiltCommitmentTransactionDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1BuiltCommitmentTransactionDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_TrustedClosingTransactionNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1TrustedClosingTransactionNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_TrustedClosingTransactionNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1TrustedClosingTransactionNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CommitmentTransactionDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CommitmentTransactionDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CommitmentTransactionDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CommitmentTransactionDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_TrustedCommitmentTransactionNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1TrustedCommitmentTransactionNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_TrustedCommitmentTransactionNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1TrustedCommitmentTransactionNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CVec_SignatureZNoneZ_get_ok
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CVec_1SignatureZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CVec_SignatureZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CVec_1SignatureZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ShutdownScriptDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ShutdownScriptDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ShutdownScriptDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ShutdownScriptDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ShutdownScriptInvalidShutdownScriptZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ShutdownScriptInvalidShutdownScriptZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ShutdownScriptInvalidShutdownScriptZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ShutdownScriptInvalidShutdownScriptZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NoneErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NoneErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NoneErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/IOError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NoneErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RouteHopDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RouteHopDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RouteHopDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RouteHopDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RouteDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RouteDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RouteDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RouteDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RouteParametersDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RouteParametersDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RouteParametersDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RouteParametersDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_u64Z_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_u64Z;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1u64Z_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PayeeDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PayeeDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PayeeDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PayeeDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RouteHintDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RouteHintDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RouteHintDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RouteHintDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RouteHintHopDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RouteHintHopDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RouteHintHopDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RouteHintHopDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RouteLightningErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RouteLightningErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RouteLightningErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RouteLightningErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_TxOutAccessErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1TxOutAccessErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_TxOutAccessErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/AccessError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1TxOutAccessErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_usizeTransactionZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1usizeTransactionZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_usizeTransactionZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1usizeTransactionZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NoneChannelMonitorUpdateErrZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NoneChannelMonitorUpdateErrZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NoneChannelMonitorUpdateErrZ_get_err
 * Signature: (J)Lorg/ldk/enums/ChannelMonitorUpdateErr;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NoneChannelMonitorUpdateErrZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKMonitorEvent_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKMonitorEvent;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKMonitorEvent_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_C2Tuple_usizeTransactionZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_C2Tuple_usizeTransactionZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1C2Tuple_1usizeTransactionZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKClosureReason_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKClosureReason;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKClosureReason_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_ClosureReasonZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_ClosureReasonZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1ClosureReasonZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_COption_ClosureReasonZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1COption_1ClosureReasonZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_COption_ClosureReasonZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1COption_1ClosureReasonZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKNetworkUpdate_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKNetworkUpdate;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKNetworkUpdate_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_NetworkUpdateZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_NetworkUpdateZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1NetworkUpdateZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSpendableOutputDescriptor_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKSpendableOutputDescriptor;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKSpendableOutputDescriptor_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPaymentPurpose_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKPaymentPurpose;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKPaymentPurpose_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKEvent_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKEvent;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKEvent_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_EventZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_EventZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1EventZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_COption_EventZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1COption_1EventZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_COption_EventZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1COption_1EventZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKErrorAction_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKErrorAction;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKErrorAction_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKMessageSendEvent_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKMessageSendEvent;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKMessageSendEvent_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ScoringParametersDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ScoringParametersDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ScoringParametersDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ScoringParametersDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ScorerDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ScorerDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ScorerDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ScorerDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InitFeaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InitFeaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InitFeaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InitFeaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelFeaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelFeaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelFeaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelFeaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NodeFeaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NodeFeaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NodeFeaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NodeFeaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InvoiceFeaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InvoiceFeaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InvoiceFeaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InvoiceFeaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelTypeFeaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelTypeFeaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelTypeFeaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelTypeFeaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_DelayedPaymentOutputDescriptorDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_DelayedPaymentOutputDescriptorDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_StaticPaymentOutputDescriptorDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_StaticPaymentOutputDescriptorDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_SpendableOutputDescriptorDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1SpendableOutputDescriptorDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_SpendableOutputDescriptorDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1SpendableOutputDescriptorDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NoneNoneZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NoneNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NoneNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NoneNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_SignatureCVec_SignatureZZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1SignatureCVec_1SignatureZZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_SignatureCVec_SignatureZZ_get_b
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1SignatureCVec_1SignatureZZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_C2Tuple_SignatureCVec_SignatureZZNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1C2Tuple_1SignatureCVec_1SignatureZZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_C2Tuple_SignatureCVec_SignatureZZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1C2Tuple_1SignatureCVec_1SignatureZZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_SignatureNoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1SignatureNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_SignatureNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1SignatureNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKBaseSign_new
 * Signature: (Lorg/ldk/impl/bindings/LDKBaseSign;J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKBaseSign_1new
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_get_per_commitment_point
 * Signature: (JJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BaseSign_1get_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_release_commitment_secret
 * Signature: (JJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BaseSign_1release_1commitment_1secret
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_validate_holder_commitment
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BaseSign_1validate_1holder_1commitment
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_channel_keys_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BaseSign_1channel_1keys_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_sign_counterparty_commitment
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BaseSign_1sign_1counterparty_1commitment
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_validate_counterparty_revocation
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BaseSign_1validate_1counterparty_1revocation
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_sign_holder_commitment_and_htlcs
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BaseSign_1sign_1holder_1commitment_1and_1htlcs
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_sign_justice_revoked_output
 * Signature: (J[BJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BaseSign_1sign_1justice_1revoked_1output
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_sign_justice_revoked_htlc
 * Signature: (J[BJJ[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BaseSign_1sign_1justice_1revoked_1htlc
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_sign_counterparty_htlc_transaction
 * Signature: (J[BJJ[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BaseSign_1sign_1counterparty_1htlc_1transaction
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_sign_closing_transaction
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BaseSign_1sign_1closing_1transaction
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_sign_channel_announcement
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BaseSign_1sign_1channel_1announcement
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_ready_channel
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BaseSign_1ready_1channel
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_get_pubkeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BaseSign_1get_1pubkeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSign_new
 * Signature: (Lorg/ldk/impl/bindings/LDKSign;Lorg/ldk/impl/bindings/LDKBaseSign;J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKSign_1new
  (JNIEnv *, jclass, jobject, jobject, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSign_get_BaseSign
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKSign_1get_1BaseSign
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sign_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Sign_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_SignDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1SignDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_SignDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1SignDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RecoverableSignatureNoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RecoverableSignatureNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RecoverableSignatureNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RecoverableSignatureNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CVec_CVec_u8ZZNoneZ_get_ok
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CVec_1CVec_1u8ZZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CVec_CVec_u8ZZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CVec_1CVec_1u8ZZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InMemorySignerDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InMemorySignerDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InMemorySignerDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InMemorySignerDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_TransactionNoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1TransactionNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_TransactionNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1TransactionNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BlockHashChannelMonitorZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BlockHashChannelMonitorZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BlockHashChannelMonitorZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BlockHashChannelMonitorZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CVec_C2Tuple_BlockHashChannelMonitorZZErrorZ_get_ok
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CVec_1C2Tuple_1BlockHashChannelMonitorZZErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CVec_C2Tuple_BlockHashChannelMonitorZZErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/IOError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CVec_1C2Tuple_1BlockHashChannelMonitorZZErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_u16Z_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_u16Z;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1u16Z_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKAPIError_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKAPIError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKAPIError_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NoneAPIErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NoneAPIErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NoneAPIErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NoneAPIErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult__u832APIErrorZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1_1u832APIErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult__u832APIErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1_1u832APIErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPaymentSendFailure_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKPaymentSendFailure;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKPaymentSendFailure_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PaymentIdPaymentSendFailureZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PaymentIdPaymentSendFailureZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PaymentIdPaymentSendFailureZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PaymentIdPaymentSendFailureZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NonePaymentSendFailureZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NonePaymentSendFailureZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NonePaymentSendFailureZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NonePaymentSendFailureZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PaymentHashPaymentIdZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PaymentHashPaymentIdZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PaymentHashPaymentIdZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PaymentHashPaymentIdZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_C2Tuple_PaymentHashPaymentIdZPaymentSendFailureZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1C2Tuple_1PaymentHashPaymentIdZPaymentSendFailureZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_C2Tuple_PaymentHashPaymentIdZPaymentSendFailureZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1C2Tuple_1PaymentHashPaymentIdZPaymentSendFailureZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKNetAddress_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKNetAddress;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKNetAddress_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PaymentHashPaymentSecretZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PaymentHashPaymentSecretZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PaymentHashPaymentSecretZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PaymentHashPaymentSecretZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_C2Tuple_PaymentHashPaymentSecretZNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1C2Tuple_1PaymentHashPaymentSecretZNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_C2Tuple_PaymentHashPaymentSecretZNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1C2Tuple_1PaymentHashPaymentSecretZNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_C2Tuple_PaymentHashPaymentSecretZAPIErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1C2Tuple_1PaymentHashPaymentSecretZAPIErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_C2Tuple_PaymentHashPaymentSecretZAPIErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1C2Tuple_1PaymentHashPaymentSecretZAPIErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PaymentSecretNoneZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PaymentSecretNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PaymentSecretNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PaymentSecretNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PaymentSecretAPIErrorZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PaymentSecretAPIErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PaymentSecretAPIErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PaymentSecretAPIErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PaymentPreimageAPIErrorZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PaymentPreimageAPIErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PaymentPreimageAPIErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PaymentPreimageAPIErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKWatch_new
 * Signature: (Lorg/ldk/impl/bindings/LDKWatch;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKWatch_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Watch_watch_channel
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Watch_1watch_1channel
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Watch_update_channel
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Watch_1update_1channel
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Watch_release_pending_monitor_events
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Watch_1release_1pending_1monitor_1events
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKBroadcasterInterface_new
 * Signature: (Lorg/ldk/impl/bindings/LDKBroadcasterInterface;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKBroadcasterInterface_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BroadcasterInterface_broadcast_transaction
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BroadcasterInterface_1broadcast_1transaction
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKKeysInterface_new
 * Signature: (Lorg/ldk/impl/bindings/LDKKeysInterface;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKKeysInterface_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysInterface_get_node_secret
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_KeysInterface_1get_1node_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysInterface_get_destination_script
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_KeysInterface_1get_1destination_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysInterface_get_shutdown_scriptpubkey
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysInterface_1get_1shutdown_1scriptpubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysInterface_get_channel_signer
 * Signature: (JZJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysInterface_1get_1channel_1signer
  (JNIEnv *, jclass, jlong, jboolean, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysInterface_get_secure_random_bytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_KeysInterface_1get_1secure_1random_1bytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysInterface_read_chan_signer
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysInterface_1read_1chan_1signer
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysInterface_sign_invoice
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysInterface_1sign_1invoice
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysInterface_get_inbound_payment_key_material
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_KeysInterface_1get_1inbound_1payment_1key_1material
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKFeeEstimator_new
 * Signature: (Lorg/ldk/impl/bindings/LDKFeeEstimator;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKFeeEstimator_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FeeEstimator_get_est_sat_per_1000_weight
 * Signature: (JLorg/ldk/enums/ConfirmationTarget;)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_FeeEstimator_1get_1est_1sat_1per_11000_1weight
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKLogger_new
 * Signature: (Lorg/ldk/impl/bindings/LDKLogger;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKLogger_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BlockHashChannelManagerZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BlockHashChannelManagerZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BlockHashChannelManagerZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BlockHashChannelManagerZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_C2Tuple_BlockHashChannelManagerZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1C2Tuple_1BlockHashChannelManagerZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_C2Tuple_BlockHashChannelManagerZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1C2Tuple_1BlockHashChannelManagerZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelConfigDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelConfigDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelConfigDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelConfigDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_OutPointDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1OutPointDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_OutPointDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1OutPointDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKType_new
 * Signature: (Lorg/ldk/impl/bindings/LDKType;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKType_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Type_type_id
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_Type_1type_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Type_debug_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Type_1debug_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Type_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Type_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_TypeZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_TypeZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1TypeZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_COption_TypeZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1COption_1TypeZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_COption_TypeZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1COption_1TypeZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPaymentError_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKPaymentError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKPaymentError_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PaymentIdPaymentErrorZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PaymentIdPaymentErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PaymentIdPaymentErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PaymentIdPaymentErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_SiPrefixNoneZ_get_ok
 * Signature: (J)Lorg/ldk/enums/SiPrefix;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1SiPrefixNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_SiPrefixNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1SiPrefixNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InvoiceNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InvoiceNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InvoiceNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InvoiceNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_SignedRawInvoiceNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1SignedRawInvoiceNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_SignedRawInvoiceNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1SignedRawInvoiceNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawInvoice_u832InvoiceSignatureZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawInvoice_1u832InvoiceSignatureZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawInvoice_u832InvoiceSignatureZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawInvoice_1u832InvoiceSignatureZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawInvoice_u832InvoiceSignatureZ_get_c
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawInvoice_1u832InvoiceSignatureZ_1get_1c
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PayeePubKeyErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PayeePubKeyErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PayeePubKeyErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Secp256k1Error;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PayeePubKeyErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PositiveTimestampCreationErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PositiveTimestampCreationErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PositiveTimestampCreationErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PositiveTimestampCreationErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NoneSemanticErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NoneSemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NoneSemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NoneSemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InvoiceSemanticErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InvoiceSemanticErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InvoiceSemanticErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InvoiceSemanticErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_DescriptionCreationErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1DescriptionCreationErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_DescriptionCreationErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1DescriptionCreationErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ExpiryTimeCreationErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ExpiryTimeCreationErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ExpiryTimeCreationErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ExpiryTimeCreationErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PrivateRouteCreationErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PrivateRouteCreationErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PrivateRouteCreationErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PrivateRouteCreationErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_StringErrorZ_get_ok
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_LDKCResult_1StringErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_StringErrorZ_get_err
 * Signature: (J)Lorg/ldk/enums/Secp256k1Error;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCResult_1StringErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelMonitorUpdateDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelMonitorUpdateDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelMonitorUpdateDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelMonitorUpdateDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_MonitorEventZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_MonitorEventZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1MonitorEventZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_COption_MonitorEventZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1COption_1MonitorEventZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_COption_MonitorEventZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1COption_1MonitorEventZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_HTLCUpdateDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1HTLCUpdateDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_HTLCUpdateDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1HTLCUpdateDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointScriptZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointScriptZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointScriptZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointScriptZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32ScriptZ_get_a
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32ScriptZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32ScriptZ_get_b
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32ScriptZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_TxidCVec_C2Tuple_u32ScriptZZZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1TxidCVec_1C2Tuple_1u32ScriptZZZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_TxidCVec_C2Tuple_u32ScriptZZZ_get_b
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1TxidCVec_1C2Tuple_1u32ScriptZZZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32TxOutZ_get_a
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32TxOutZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32TxOutZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32TxOutZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_TxidCVec_C2Tuple_u32TxOutZZZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1TxidCVec_1C2Tuple_1u32TxOutZZZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_TxidCVec_C2Tuple_u32TxOutZZZ_get_b
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1TxidCVec_1C2Tuple_1u32TxOutZZZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKBalance_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKBalance;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKBalance_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_C2Tuple_BlockHashChannelMonitorZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1C2Tuple_1BlockHashChannelMonitorZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_C2Tuple_BlockHashChannelMonitorZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1C2Tuple_1BlockHashChannelMonitorZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NoneLightningErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NoneLightningErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NoneLightningErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NoneLightningErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyTypeZ_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyTypeZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyTypeZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyTypeZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_boolLightningErrorZ_get_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_LDKCResult_1boolLightningErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_boolLightningErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1boolLightningErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_get_b
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1get_1b
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_get_c
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1get_1c
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CVec_u8ZPeerHandleErrorZ_get_ok
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CVec_1u8ZPeerHandleErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CVec_u8ZPeerHandleErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CVec_1u8ZPeerHandleErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NonePeerHandleErrorZ_get_ok
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NonePeerHandleErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NonePeerHandleErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NonePeerHandleErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_boolPeerHandleErrorZ_get_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_LDKCResult_1boolPeerHandleErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_boolPeerHandleErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1boolPeerHandleErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NodeIdDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NodeIdDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NodeIdDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NodeIdDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_COption_NetworkUpdateZDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1COption_1NetworkUpdateZDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_COption_NetworkUpdateZDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1COption_1NetworkUpdateZDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKAccess_new
 * Signature: (Lorg/ldk/impl/bindings/LDKAccess;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKAccess_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Access_get_utxo
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Access_1get_1utxo
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_AccessZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_AccessZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1AccessZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_DirectionalChannelInfoDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1DirectionalChannelInfoDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_DirectionalChannelInfoDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1DirectionalChannelInfoDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelInfoDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelInfoDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelInfoDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelInfoDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RoutingFeesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RoutingFeesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RoutingFeesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RoutingFeesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NodeAnnouncementInfoDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NodeAnnouncementInfoDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NodeAnnouncementInfoDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NodeAnnouncementInfoDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NodeInfoDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NodeInfoDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NodeInfoDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NodeInfoDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NetworkGraphDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NetworkGraphDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NetworkGraphDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NetworkGraphDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_CVec_NetAddressZZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_CVec_NetAddressZZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1CVec_1NetAddressZZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NetAddressDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NetAddressDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NetAddressDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NetAddressDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_AcceptChannelDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1AcceptChannelDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_AcceptChannelDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1AcceptChannelDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_AnnouncementSignaturesDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1AnnouncementSignaturesDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_AnnouncementSignaturesDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1AnnouncementSignaturesDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelReestablishDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelReestablishDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelReestablishDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelReestablishDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ClosingSignedDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ClosingSignedDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ClosingSignedDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ClosingSignedDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ClosingSignedFeeRangeDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ClosingSignedFeeRangeDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ClosingSignedFeeRangeDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ClosingSignedFeeRangeDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CommitmentSignedDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CommitmentSignedDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_CommitmentSignedDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1CommitmentSignedDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_FundingCreatedDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1FundingCreatedDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_FundingCreatedDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1FundingCreatedDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_FundingSignedDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1FundingSignedDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_FundingSignedDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1FundingSignedDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_FundingLockedDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1FundingLockedDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_FundingLockedDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1FundingLockedDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InitDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InitDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InitDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InitDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_OpenChannelDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1OpenChannelDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_OpenChannelDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1OpenChannelDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RevokeAndACKDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RevokeAndACKDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_RevokeAndACKDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1RevokeAndACKDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ShutdownDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ShutdownDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ShutdownDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ShutdownDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UpdateFailHTLCDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UpdateFailHTLCDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UpdateFailHTLCDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UpdateFailHTLCDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UpdateFailMalformedHTLCDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UpdateFailMalformedHTLCDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UpdateFailMalformedHTLCDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UpdateFailMalformedHTLCDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UpdateFeeDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UpdateFeeDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UpdateFeeDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UpdateFeeDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UpdateFulfillHTLCDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UpdateFulfillHTLCDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UpdateFulfillHTLCDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UpdateFulfillHTLCDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UpdateAddHTLCDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UpdateAddHTLCDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UpdateAddHTLCDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UpdateAddHTLCDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PingDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PingDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PingDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PingDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PongDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PongDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_PongDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1PongDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UnsignedChannelAnnouncementDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UnsignedChannelAnnouncementDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UnsignedChannelAnnouncementDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UnsignedChannelAnnouncementDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelAnnouncementDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelAnnouncementDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelAnnouncementDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelAnnouncementDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UnsignedChannelUpdateDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UnsignedChannelUpdateDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UnsignedChannelUpdateDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UnsignedChannelUpdateDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelUpdateDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelUpdateDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ChannelUpdateDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ChannelUpdateDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ErrorMessageDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ErrorMessageDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ErrorMessageDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ErrorMessageDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UnsignedNodeAnnouncementDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UnsignedNodeAnnouncementDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_UnsignedNodeAnnouncementDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1UnsignedNodeAnnouncementDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NodeAnnouncementDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NodeAnnouncementDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_NodeAnnouncementDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1NodeAnnouncementDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_QueryShortChannelIdsDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1QueryShortChannelIdsDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_QueryShortChannelIdsDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1QueryShortChannelIdsDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ReplyShortChannelIdsEndDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ReplyShortChannelIdsEndDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ReplyShortChannelIdsEndDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ReplyShortChannelIdsEndDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_QueryChannelRangeDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1QueryChannelRangeDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_QueryChannelRangeDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1QueryChannelRangeDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ReplyChannelRangeDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ReplyChannelRangeDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_ReplyChannelRangeDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1ReplyChannelRangeDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_GossipTimestampFilterDecodeErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1GossipTimestampFilterDecodeErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_GossipTimestampFilterDecodeErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1GossipTimestampFilterDecodeErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSignOrCreationError_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKSignOrCreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKSignOrCreationError_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InvoiceSignOrCreationErrorZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InvoiceSignOrCreationErrorZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_InvoiceSignOrCreationErrorZ_get_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1InvoiceSignOrCreationErrorZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKFilter_new
 * Signature: (Lorg/ldk/impl/bindings/LDKFilter;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKFilter_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Filter_register_tx
 * Signature: (J[B[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Filter_1register_1tx
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Filter_register_output
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Filter_1register_1output
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCOption_FilterZ_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKCOption_FilterZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKCOption_1FilterZ_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_LockedChannelMonitorNoneZ_get_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCResult_1LockedChannelMonitorNoneZ_1get_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCResult_LockedChannelMonitorNoneZ_get_err
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LDKCResult_1LockedChannelMonitorNoneZ_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKMessageSendEventsProvider_new
 * Signature: (Lorg/ldk/impl/bindings/LDKMessageSendEventsProvider;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKMessageSendEventsProvider_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEventsProvider_get_and_clear_pending_msg_events
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_MessageSendEventsProvider_1get_1and_1clear_1pending_1msg_1events
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKEventHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKEventHandler;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKEventHandler_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EventHandler_handle_event
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_EventHandler_1handle_1event
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKEventsProvider_new
 * Signature: (Lorg/ldk/impl/bindings/LDKEventsProvider;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKEventsProvider_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EventsProvider_process_pending_events
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_EventsProvider_1process_1pending_1events
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKListen_new
 * Signature: (Lorg/ldk/impl/bindings/LDKListen;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKListen_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Listen_block_connected
 * Signature: (J[BI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Listen_1block_1connected
  (JNIEnv *, jclass, jlong, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Listen_block_disconnected
 * Signature: (J[BI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Listen_1block_1disconnected
  (JNIEnv *, jclass, jlong, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKConfirm_new
 * Signature: (Lorg/ldk/impl/bindings/LDKConfirm;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKConfirm_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Confirm_transactions_confirmed
 * Signature: (J[B[JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Confirm_1transactions_1confirmed
  (JNIEnv *, jclass, jlong, jbyteArray, jlongArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Confirm_transaction_unconfirmed
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Confirm_1transaction_1unconfirmed
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Confirm_best_block_updated
 * Signature: (J[BI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Confirm_1best_1block_1updated
  (JNIEnv *, jclass, jlong, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Confirm_get_relevant_txids
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_Confirm_1get_1relevant_1txids
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPersist_new
 * Signature: (Lorg/ldk/impl/bindings/LDKPersist;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKPersist_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Persist_persist_new_channel
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Persist_1persist_1new_1channel
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Persist_update_persisted_channel
 * Signature: (JJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Persist_1update_1persisted_1channel
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKChannelMessageHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKChannelMessageHandler;Lorg/ldk/impl/bindings/LDKMessageSendEventsProvider;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKChannelMessageHandler_1new
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKChannelMessageHandler_get_MessageSendEventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKChannelMessageHandler_1get_1MessageSendEventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_open_channel
 * Signature: (J[BJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1open_1channel
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_accept_channel
 * Signature: (J[BJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1accept_1channel
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_funding_created
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1funding_1created
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_funding_signed
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1funding_1signed
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_funding_locked
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1funding_1locked
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_shutdown
 * Signature: (J[BJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1shutdown
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_closing_signed
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1closing_1signed
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_update_add_htlc
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1update_1add_1htlc
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_update_fulfill_htlc
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1update_1fulfill_1htlc
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_update_fail_htlc
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1update_1fail_1htlc
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_update_fail_malformed_htlc
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1update_1fail_1malformed_1htlc
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_commitment_signed
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1commitment_1signed
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_revoke_and_ack
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1revoke_1and_1ack
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_update_fee
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1update_1fee
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_announcement_signatures
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1announcement_1signatures
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_peer_disconnected
 * Signature: (J[BZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1peer_1disconnected
  (JNIEnv *, jclass, jlong, jbyteArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_peer_connected
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1peer_1connected
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_channel_reestablish
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1channel_1reestablish
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_channel_update
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1channel_1update
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_handle_error
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1handle_1error
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKRoutingMessageHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKRoutingMessageHandler;Lorg/ldk/impl/bindings/LDKMessageSendEventsProvider;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKRoutingMessageHandler_1new
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKRoutingMessageHandler_get_MessageSendEventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKRoutingMessageHandler_1get_1MessageSendEventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_node_announcement
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1node_1announcement
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_channel_announcement
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1channel_1announcement
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_channel_update
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1channel_1update
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_get_next_channel_announcements
 * Signature: (JJB)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1get_1next_1channel_1announcements
  (JNIEnv *, jclass, jlong, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_get_next_node_announcements
 * Signature: (J[BB)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1get_1next_1node_1announcements
  (JNIEnv *, jclass, jlong, jbyteArray, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_sync_routing_table
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1sync_1routing_1table
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_reply_channel_range
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1reply_1channel_1range
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_reply_short_channel_ids_end
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1reply_1short_1channel_1ids_1end
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_query_channel_range
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1query_1channel_1range
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_handle_query_short_channel_ids
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1handle_1query_1short_1channel_1ids
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCustomMessageReader_new
 * Signature: (Lorg/ldk/impl/bindings/LDKCustomMessageReader;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCustomMessageReader_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageReader_read
 * Signature: (JS[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CustomMessageReader_1read
  (JNIEnv *, jclass, jlong, jshort, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCustomMessageHandler_new
 * Signature: (Lorg/ldk/impl/bindings/LDKCustomMessageHandler;Lorg/ldk/impl/bindings/LDKCustomMessageReader;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCustomMessageHandler_1new
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKCustomMessageHandler_get_CustomMessageReader
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKCustomMessageHandler_1get_1CustomMessageReader
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageHandler_handle_custom_message
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CustomMessageHandler_1handle_1custom_1message
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageHandler_get_and_clear_pending_msg
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CustomMessageHandler_1get_1and_1clear_1pending_1msg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKSocketDescriptor_new
 * Signature: (Lorg/ldk/impl/bindings/LDKSocketDescriptor;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKSocketDescriptor_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketDescriptor_send_data
 * Signature: (J[BZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketDescriptor_1send_1data
  (JNIEnv *, jclass, jlong, jbyteArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketDescriptor_disconnect_socket
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SocketDescriptor_1disconnect_1socket
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketDescriptor_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketDescriptor_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKScore_new
 * Signature: (Lorg/ldk/impl/bindings/LDKScore;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKScore_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Score_channel_penalty_msat
 * Signature: (JJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Score_1channel_1penalty_1msat
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Score_payment_path_failed
 * Signature: (J[JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Score_1payment_1path_1failed
  (JNIEnv *, jclass, jlong, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Score_payment_path_successful
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Score_1payment_1path_1successful
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Score_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Score_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKLockableScore_new
 * Signature: (Lorg/ldk/impl/bindings/LDKLockableScore;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKLockableScore_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LockableScore_lock
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LockableScore_1lock
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKChannelManagerPersister_new
 * Signature: (Lorg/ldk/impl/bindings/LDKChannelManagerPersister;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKChannelManagerPersister_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerPersister_persist_manager
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerPersister_1persist_1manager
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKFallback_ref_from_ptr
 * Signature: (J)Lorg/ldk/impl/bindings/LDKFallback;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_LDKFallback_1ref_1from_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKPayer_new
 * Signature: (Lorg/ldk/impl/bindings/LDKPayer;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKPayer_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payer_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Payer_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payer_first_hops
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Payer_1first_1hops
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payer_send_payment
 * Signature: (JJ[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payer_1send_1payment
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payer_send_spontaneous_payment
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payer_1send_1spontaneous_1payment
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payer_retry_payment
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payer_1retry_1payment
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payer_abandon_payment
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Payer_1abandon_1payment
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LDKRouter_new
 * Signature: (Lorg/ldk/impl/bindings/LDKRouter;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LDKRouter_1new
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Router_find_route
 * Signature: (J[BJ[B[JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Router_1find_1route
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jbyteArray, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    _ldk_get_compiled_version
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings__1ldk_1get_1compiled_1version
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    _ldk_c_bindings_get_compiled_version
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings__1ldk_1c_1bindings_1get_1compiled_1version
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Transaction_free
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Transaction_1free
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxOut_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxOut_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxOut_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxOut_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxOut_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxOut_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxOut_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxOut_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Str_free
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Str_1free
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SecretKeyErrorZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SecretKeyErrorZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SecretKeyErrorZ_err
 * Signature: (Lorg/ldk/enums/Secp256k1Error;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SecretKeyErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SecretKeyErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SecretKeyErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SecretKeyErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SecretKeyErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyErrorZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyErrorZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyErrorZ_err
 * Signature: (Lorg/ldk/enums/Secp256k1Error;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PublicKeyErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PublicKeyErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelPublicKeysDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelPublicKeysDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysErrorZ_err
 * Signature: (Lorg/ldk/enums/Secp256k1Error;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxCreationKeysErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxCreationKeysErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u32Z_some
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u32Z_1some
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u32Z_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u32Z_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u32Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1u32Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u32Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u32Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u32Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u32Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCOutputInCommitmentDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCOutputInCommitmentDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NoneZ_some
 * Signature: ()Lorg/ldk/enums/COption_NoneZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_COption_1NoneZ_1some
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NoneZ_none
 * Signature: ()Lorg/ldk/enums/COption_NoneZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_COption_1NoneZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NoneZ_free
 * Signature: (Lorg/ldk/enums/COption_NoneZ;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1NoneZ_1free
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CounterpartyChannelTransactionParametersDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CounterpartyChannelTransactionParametersDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTransactionParametersDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTransactionParametersDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_SignatureZ_free
 * Signature: ([[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1SignatureZ_1free
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HolderCommitmentTransactionDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HolderCommitmentTransactionDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_BuiltCommitmentTransactionDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1BuiltCommitmentTransactionDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedClosingTransactionNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedClosingTransactionNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedClosingTransactionNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedClosingTransactionNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedClosingTransactionNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedClosingTransactionNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedClosingTransactionNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedClosingTransactionNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentTransactionDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentTransactionDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedCommitmentTransactionNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedCommitmentTransactionNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedCommitmentTransactionNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedCommitmentTransactionNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedCommitmentTransactionNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedCommitmentTransactionNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TrustedCommitmentTransactionNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TrustedCommitmentTransactionNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_SignatureZNoneZ_ok
 * Signature: ([[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1SignatureZNoneZ_1ok
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_SignatureZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1SignatureZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_SignatureZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1SignatureZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_SignatureZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1SignatureZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_SignatureZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1SignatureZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_SignatureZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1SignatureZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownScriptInvalidShutdownScriptZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownScriptInvalidShutdownScriptZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneErrorZ_err
 * Signature: (Lorg/ldk/enums/IOError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHopDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHopDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_RouteHopZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1RouteHopZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_CVec_RouteHopZZ_free
 * Signature: ([[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1CVec_1RouteHopZZ_1free
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteParametersDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteParametersDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_RouteHintZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1RouteHintZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u64Z_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u64Z_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u64Z_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u64Z_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u64Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1u64Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u64Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u64Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u64Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u64Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeeDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeeDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeeDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeeDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeeDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PayeeDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeeDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PayeeDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeeDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeeDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeeDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeeDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_RouteHintHopZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1RouteHintHopZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteHintHopDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteHintHopDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_ChannelDetailsZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1ChannelDetailsZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RouteLightningErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RouteLightningErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutAccessErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutAccessErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutAccessErrorZ_err
 * Signature: (Lorg/ldk/enums/AccessError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutAccessErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutAccessErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutAccessErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutAccessErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutAccessErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutAccessErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutAccessErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TxOutAccessErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TxOutAccessErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_usizeTransactionZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1usizeTransactionZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_usizeTransactionZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1usizeTransactionZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_usizeTransactionZ_new
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1usizeTransactionZ_1new
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_usizeTransactionZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1usizeTransactionZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_usizeTransactionZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1usizeTransactionZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_TxidZ_free
 * Signature: ([[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1TxidZ_1free
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneChannelMonitorUpdateErrZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneChannelMonitorUpdateErrZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneChannelMonitorUpdateErrZ_err
 * Signature: (Lorg/ldk/enums/ChannelMonitorUpdateErr;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneChannelMonitorUpdateErrZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneChannelMonitorUpdateErrZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneChannelMonitorUpdateErrZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneChannelMonitorUpdateErrZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneChannelMonitorUpdateErrZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneChannelMonitorUpdateErrZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneChannelMonitorUpdateErrZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneChannelMonitorUpdateErrZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneChannelMonitorUpdateErrZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_MonitorEventZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1MonitorEventZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_usizeTransactionZZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1usizeTransactionZZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_usizeTransactionZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1usizeTransactionZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_usizeTransactionZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1usizeTransactionZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_usizeTransactionZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1usizeTransactionZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_C2Tuple_usizeTransactionZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1C2Tuple_1usizeTransactionZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ClosureReasonZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ClosureReasonZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ClosureReasonZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ClosureReasonZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ClosureReasonZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1ClosureReasonZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ClosureReasonZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ClosureReasonZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_ClosureReasonZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1ClosureReasonZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_ClosureReasonZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1ClosureReasonZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NetworkUpdateZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1NetworkUpdateZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NetworkUpdateZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1NetworkUpdateZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NetworkUpdateZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1NetworkUpdateZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NetworkUpdateZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1NetworkUpdateZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_NetworkUpdateZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1NetworkUpdateZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_SpendableOutputDescriptorZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1SpendableOutputDescriptorZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_EventZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1EventZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_EventZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1EventZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_EventZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1EventZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_EventZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1EventZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_EventZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1EventZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_EventZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1EventZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_MessageSendEventZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1MessageSendEventZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ScoringParametersDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ScoringParametersDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ScoringParametersDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ScoringParametersDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ScoringParametersDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ScoringParametersDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ScoringParametersDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ScoringParametersDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ScorerDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ScorerDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ScorerDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ScorerDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ScorerDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ScorerDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ScorerDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ScorerDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitFeaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitFeaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitFeaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitFeaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitFeaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InitFeaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitFeaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InitFeaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelFeaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelFeaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelFeaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelFeaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelFeaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelFeaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelFeaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelFeaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeFeaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeFeaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeFeaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeFeaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeFeaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NodeFeaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeFeaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NodeFeaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceFeaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceFeaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceFeaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceFeaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceFeaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceFeaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceFeaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceFeaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTypeFeaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTypeFeaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTypeFeaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTypeFeaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTypeFeaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTypeFeaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelTypeFeaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelTypeFeaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DelayedPaymentOutputDescriptorDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DelayedPaymentOutputDescriptorDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StaticPaymentOutputDescriptorDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StaticPaymentOutputDescriptorDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SpendableOutputDescriptorDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SpendableOutputDescriptorDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_SignatureCVec_SignatureZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1SignatureCVec_1SignatureZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_SignatureCVec_SignatureZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1SignatureCVec_1SignatureZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_SignatureCVec_SignatureZZ_new
 * Signature: ([B[[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1SignatureCVec_1SignatureZZ_1new
  (JNIEnv *, jclass, jbyteArray, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_SignatureCVec_SignatureZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1SignatureCVec_1SignatureZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_SignatureCVec_SignatureZZNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1SignatureCVec_1SignatureZZNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_SignatureCVec_SignatureZZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1SignatureCVec_1SignatureZZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_SignatureCVec_SignatureZZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1SignatureCVec_1SignatureZZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_SignatureCVec_SignatureZZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1SignatureCVec_1SignatureZZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_SignatureCVec_SignatureZZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1SignatureCVec_1SignatureZZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_SignatureCVec_SignatureZZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1SignatureCVec_1SignatureZZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignatureNoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignatureNoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignatureNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignatureNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignatureNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SignatureNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignatureNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SignatureNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignatureNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignatureNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignatureNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignatureNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SignDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SignDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_u8Z_free
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1u8Z_1free
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RecoverableSignatureNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RecoverableSignatureNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_CVec_u8ZZ_free
 * Signature: ([[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1CVec_1u8ZZ_1free
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_CVec_u8ZZNoneZ_ok
 * Signature: ([[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1CVec_1u8ZZNoneZ_1ok
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_CVec_u8ZZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1CVec_1u8ZZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_CVec_u8ZZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1CVec_1u8ZZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_CVec_u8ZZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1CVec_1u8ZZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_CVec_u8ZZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1CVec_1u8ZZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_CVec_u8ZZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1CVec_1u8ZZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InMemorySignerDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InMemorySignerDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_TxOutZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1TxOutZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_TransactionNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1TransactionNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BlockHashChannelMonitorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BlockHashChannelMonitorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BlockHashChannelMonitorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BlockHashChannelMonitorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BlockHashChannelMonitorZ_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BlockHashChannelMonitorZ_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BlockHashChannelMonitorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BlockHashChannelMonitorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_BlockHashChannelMonitorZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1BlockHashChannelMonitorZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_BlockHashChannelMonitorZZErrorZ_ok
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1BlockHashChannelMonitorZZErrorZ_1ok
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_BlockHashChannelMonitorZZErrorZ_err
 * Signature: (Lorg/ldk/enums/IOError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1BlockHashChannelMonitorZZErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_BlockHashChannelMonitorZZErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1BlockHashChannelMonitorZZErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_BlockHashChannelMonitorZZErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1BlockHashChannelMonitorZZErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_BlockHashChannelMonitorZZErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1BlockHashChannelMonitorZZErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_C2Tuple_BlockHashChannelMonitorZZErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1C2Tuple_1BlockHashChannelMonitorZZErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u16Z_some
 * Signature: (S)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u16Z_1some
  (JNIEnv *, jclass, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u16Z_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u16Z_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u16Z_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1u16Z_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u16Z_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u16Z_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_u16Z_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1u16Z_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneAPIErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneAPIErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_CResult_NoneAPIErrorZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1CResult_1NoneAPIErrorZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_APIErrorZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1APIErrorZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832APIErrorZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832APIErrorZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832APIErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832APIErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832APIErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832APIErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832APIErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832APIErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832APIErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832APIErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult__u832APIErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1_1u832APIErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentIdPaymentSendFailureZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentIdPaymentSendFailureZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentIdPaymentSendFailureZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentIdPaymentSendFailureZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentIdPaymentSendFailureZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentIdPaymentSendFailureZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentIdPaymentSendFailureZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentIdPaymentSendFailureZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentIdPaymentSendFailureZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentIdPaymentSendFailureZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentIdPaymentSendFailureZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentIdPaymentSendFailureZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePaymentSendFailureZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePaymentSendFailureZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePaymentSendFailureZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePaymentSendFailureZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePaymentSendFailureZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NonePaymentSendFailureZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePaymentSendFailureZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NonePaymentSendFailureZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePaymentSendFailureZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePaymentSendFailureZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePaymentSendFailureZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePaymentSendFailureZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PaymentHashPaymentIdZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PaymentHashPaymentIdZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PaymentHashPaymentIdZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PaymentHashPaymentIdZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PaymentHashPaymentIdZ_new
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PaymentHashPaymentIdZ_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PaymentHashPaymentIdZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PaymentHashPaymentIdZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentIdZPaymentSendFailureZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentIdZPaymentSendFailureZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentIdZPaymentSendFailureZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentIdZPaymentSendFailureZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentIdZPaymentSendFailureZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentIdZPaymentSendFailureZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentIdZPaymentSendFailureZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentIdZPaymentSendFailureZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentIdZPaymentSendFailureZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentIdZPaymentSendFailureZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentIdZPaymentSendFailureZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentIdZPaymentSendFailureZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_NetAddressZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1NetAddressZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PaymentHashPaymentSecretZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PaymentHashPaymentSecretZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PaymentHashPaymentSecretZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PaymentHashPaymentSecretZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PaymentHashPaymentSecretZ_new
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PaymentHashPaymentSecretZ_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PaymentHashPaymentSecretZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PaymentHashPaymentSecretZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentSecretZNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentSecretZNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentSecretZNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentSecretZNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentSecretZNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentSecretZNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentSecretZNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentSecretZNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentSecretZNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentSecretZNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentSecretZNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentSecretZNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentSecretZAPIErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentSecretZAPIErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentSecretZAPIErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentSecretZAPIErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentSecretZAPIErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentSecretZAPIErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentSecretZAPIErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentSecretZAPIErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentSecretZAPIErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentSecretZAPIErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_PaymentHashPaymentSecretZAPIErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1PaymentHashPaymentSecretZAPIErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentSecretNoneZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentSecretNoneZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentSecretNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentSecretNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentSecretNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentSecretNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentSecretNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentSecretNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentSecretNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentSecretNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentSecretNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentSecretNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentSecretAPIErrorZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentSecretAPIErrorZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentSecretAPIErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentSecretAPIErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentSecretAPIErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentSecretAPIErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentSecretAPIErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentSecretAPIErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentSecretAPIErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentSecretAPIErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentSecretAPIErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentSecretAPIErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPreimageAPIErrorZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPreimageAPIErrorZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPreimageAPIErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPreimageAPIErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPreimageAPIErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPreimageAPIErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPreimageAPIErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPreimageAPIErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPreimageAPIErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPreimageAPIErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentPreimageAPIErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentPreimageAPIErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_ChannelMonitorZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1ChannelMonitorZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BlockHashChannelManagerZ_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BlockHashChannelManagerZ_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BlockHashChannelManagerZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BlockHashChannelManagerZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BlockHashChannelManagerZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BlockHashChannelManagerZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BlockHashChannelManagerZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BlockHashChannelManagerZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BlockHashChannelManagerZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BlockHashChannelManagerZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BlockHashChannelManagerZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BlockHashChannelManagerZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelConfigDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelConfigDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OutPointDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OutPointDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TypeZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1TypeZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TypeZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1TypeZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TypeZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1TypeZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TypeZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1TypeZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_TypeZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1TypeZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_TypeZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1TypeZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentIdPaymentErrorZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentIdPaymentErrorZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentIdPaymentErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentIdPaymentErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentIdPaymentErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentIdPaymentErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentIdPaymentErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentIdPaymentErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentIdPaymentErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentIdPaymentErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PaymentIdPaymentErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PaymentIdPaymentErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixNoneZ_ok
 * Signature: (Lorg/ldk/enums/SiPrefix;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixNoneZ_1ok
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SiPrefixNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SiPrefixNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawInvoiceNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawInvoiceNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawInvoiceNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawInvoiceNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawInvoiceNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawInvoiceNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawInvoiceNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawInvoiceNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawInvoiceNoneZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawInvoiceNoneZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_SignedRawInvoiceNoneZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1SignedRawInvoiceNoneZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawInvoice_u832InvoiceSignatureZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawInvoice_1u832InvoiceSignatureZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawInvoice_u832InvoiceSignatureZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawInvoice_1u832InvoiceSignatureZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawInvoice_u832InvoiceSignatureZ_new
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawInvoice_1u832InvoiceSignatureZ_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_RawInvoice_u832InvoiceSignatureZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C3Tuple_1RawInvoice_1u832InvoiceSignatureZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeyErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeyErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeyErrorZ_err
 * Signature: (Lorg/ldk/enums/Secp256k1Error;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeyErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeyErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeyErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeyErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeyErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeyErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeyErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PayeePubKeyErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PayeePubKeyErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_PrivateRouteZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1PrivateRouteZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_err
 * Signature: (Lorg/ldk/enums/CreationError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PositiveTimestampCreationErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PositiveTimestampCreationErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSemanticErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSemanticErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneSemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneSemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceSemanticErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceSemanticErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceSemanticErrorZ_err
 * Signature: (Lorg/ldk/enums/SemanticError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceSemanticErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceSemanticErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceSemanticErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceSemanticErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceSemanticErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceSemanticErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceSemanticErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceSemanticErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceSemanticErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_err
 * Signature: (Lorg/ldk/enums/CreationError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DescriptionCreationErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DescriptionCreationErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ExpiryTimeCreationErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ExpiryTimeCreationErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ExpiryTimeCreationErrorZ_err
 * Signature: (Lorg/ldk/enums/CreationError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ExpiryTimeCreationErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ExpiryTimeCreationErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ExpiryTimeCreationErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ExpiryTimeCreationErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ExpiryTimeCreationErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ExpiryTimeCreationErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ExpiryTimeCreationErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ExpiryTimeCreationErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ExpiryTimeCreationErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_err
 * Signature: (Lorg/ldk/enums/CreationError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PrivateRouteCreationErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PrivateRouteCreationErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StringErrorZ_ok
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StringErrorZ_1ok
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StringErrorZ_err
 * Signature: (Lorg/ldk/enums/Secp256k1Error;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1StringErrorZ_1err
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StringErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1StringErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_StringErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1StringErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelMonitorUpdateDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelMonitorUpdateDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MonitorEventZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MonitorEventZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MonitorEventZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MonitorEventZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MonitorEventZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1MonitorEventZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MonitorEventZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MonitorEventZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_MonitorEventZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1MonitorEventZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_MonitorEventZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1MonitorEventZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_HTLCUpdateDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1HTLCUpdateDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointScriptZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointScriptZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointScriptZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointScriptZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointScriptZ_new
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointScriptZ_1new
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_OutPointScriptZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1OutPointScriptZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32ScriptZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32ScriptZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32ScriptZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32ScriptZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32ScriptZ_new
 * Signature: (I[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32ScriptZ_1new
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32ScriptZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32ScriptZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_u32ScriptZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1u32ScriptZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_TxidCVec_C2Tuple_u32ScriptZZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1TxidCVec_1C2Tuple_1u32ScriptZZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_TxidCVec_C2Tuple_u32ScriptZZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1TxidCVec_1C2Tuple_1u32ScriptZZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_TxidCVec_C2Tuple_u32ScriptZZZ_new
 * Signature: ([B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1TxidCVec_1C2Tuple_1u32ScriptZZZ_1new
  (JNIEnv *, jclass, jbyteArray, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_TxidCVec_C2Tuple_u32ScriptZZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1TxidCVec_1C2Tuple_1u32ScriptZZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_TxidCVec_C2Tuple_u32ScriptZZZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1TxidCVec_1C2Tuple_1u32ScriptZZZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_EventZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1EventZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_TransactionZ_free
 * Signature: ([[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1TransactionZ_1free
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32TxOutZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32TxOutZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32TxOutZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32TxOutZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32TxOutZ_new
 * Signature: (IJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32TxOutZ_1new
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_u32TxOutZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1u32TxOutZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_u32TxOutZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1u32TxOutZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_TxidCVec_C2Tuple_u32TxOutZZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1TxidCVec_1C2Tuple_1u32TxOutZZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_TxidCVec_C2Tuple_u32TxOutZZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1TxidCVec_1C2Tuple_1u32TxOutZZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_TxidCVec_C2Tuple_u32TxOutZZZ_new
 * Signature: ([B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1TxidCVec_1C2Tuple_1u32TxOutZZZ_1new
  (JNIEnv *, jclass, jbyteArray, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_TxidCVec_C2Tuple_u32TxOutZZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1TxidCVec_1C2Tuple_1u32TxOutZZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_TxidCVec_C2Tuple_u32TxOutZZZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1TxidCVec_1C2Tuple_1u32TxOutZZZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_BalanceZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1BalanceZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BlockHashChannelMonitorZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BlockHashChannelMonitorZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BlockHashChannelMonitorZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BlockHashChannelMonitorZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BlockHashChannelMonitorZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BlockHashChannelMonitorZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BlockHashChannelMonitorZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BlockHashChannelMonitorZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BlockHashChannelMonitorZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BlockHashChannelMonitorZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_C2Tuple_BlockHashChannelMonitorZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1C2Tuple_1BlockHashChannelMonitorZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NoneLightningErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NoneLightningErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyTypeZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyTypeZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyTypeZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyTypeZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyTypeZ_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyTypeZ_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_PublicKeyTypeZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C2Tuple_1PublicKeyTypeZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C2Tuple_PublicKeyTypeZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C2Tuple_1PublicKeyTypeZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_ok
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1ok
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolLightningErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolLightningErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_new
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1new
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_C3Tuple_ChannelAnnouncementChannelUpdateChannelUpdateZZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1C3Tuple_1ChannelAnnouncementChannelUpdateChannelUpdateZZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_NodeAnnouncementZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1NodeAnnouncementZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_PublicKeyZ_free
 * Signature: ([[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1PublicKeyZ_1free
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_ok
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1ok
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CVec_u8ZPeerHandleErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CVec_1u8ZPeerHandleErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_ok
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1ok
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NonePeerHandleErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NonePeerHandleErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_ok
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1ok
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_boolPeerHandleErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1boolPeerHandleErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeIdDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeIdDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_COption_NetworkUpdateZDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1COption_1NetworkUpdateZDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_AccessZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1AccessZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_AccessZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1AccessZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_AccessZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1AccessZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DirectionalChannelInfoDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DirectionalChannelInfoDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DirectionalChannelInfoDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DirectionalChannelInfoDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DirectionalChannelInfoDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1DirectionalChannelInfoDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DirectionalChannelInfoDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1DirectionalChannelInfoDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DirectionalChannelInfoDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DirectionalChannelInfoDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_DirectionalChannelInfoDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1DirectionalChannelInfoDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelInfoDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelInfoDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RoutingFeesDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RoutingFeesDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementInfoDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementInfoDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_u64Z_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1u64Z_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeInfoDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeInfoDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetworkGraphDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NetworkGraphDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetworkGraphDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NetworkGraphDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetworkGraphDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NetworkGraphDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetworkGraphDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NetworkGraphDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetworkGraphDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NetworkGraphDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetworkGraphDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NetworkGraphDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_NetAddressZZ_some
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1NetAddressZZ_1some
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_NetAddressZZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1NetAddressZZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_NetAddressZZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1NetAddressZZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_NetAddressZZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1NetAddressZZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_CVec_NetAddressZZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1CVec_1NetAddressZZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetAddressDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NetAddressDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetAddressDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NetAddressDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetAddressDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NetAddressDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetAddressDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NetAddressDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetAddressDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NetAddressDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NetAddressDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NetAddressDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_UpdateAddHTLCZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1UpdateAddHTLCZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_UpdateFulfillHTLCZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1UpdateFulfillHTLCZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_UpdateFailHTLCZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1UpdateFailHTLCZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_UpdateFailMalformedHTLCZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1UpdateFailMalformedHTLCZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AcceptChannelDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AcceptChannelDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_AnnouncementSignaturesDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1AnnouncementSignaturesDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelReestablishDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelReestablishDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ClosingSignedFeeRangeDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ClosingSignedFeeRangeDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_CommitmentSignedDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1CommitmentSignedDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingCreatedDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingCreatedDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingSignedDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingSignedDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingLockedDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingLockedDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingLockedDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingLockedDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingLockedDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1FundingLockedDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingLockedDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1FundingLockedDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingLockedDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingLockedDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_FundingLockedDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1FundingLockedDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InitDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InitDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_OpenChannelDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1OpenChannelDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_RevokeAndACKDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1RevokeAndACKDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ShutdownDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ShutdownDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailHTLCDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailHTLCDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFailMalformedHTLCDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFailMalformedHTLCDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFeeDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFeeDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateFulfillHTLCDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateFulfillHTLCDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UpdateAddHTLCDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UpdateAddHTLCDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PingDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PingDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_PongDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1PongDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelAnnouncementDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelAnnouncementDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelAnnouncementDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelAnnouncementDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedChannelUpdateDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedChannelUpdateDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ChannelUpdateDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ChannelUpdateDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ErrorMessageDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ErrorMessageDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_UnsignedNodeAnnouncementDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1UnsignedNodeAnnouncementDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_NodeAnnouncementDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1NodeAnnouncementDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryShortChannelIdsDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryShortChannelIdsDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyShortChannelIdsEndDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyShortChannelIdsEndDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_QueryChannelRangeDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1QueryChannelRangeDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_ReplyChannelRangeDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1ReplyChannelRangeDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_GossipTimestampFilterDecodeErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1GossipTimestampFilterDecodeErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceSignOrCreationErrorZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceSignOrCreationErrorZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceSignOrCreationErrorZ_err
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceSignOrCreationErrorZ_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceSignOrCreationErrorZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceSignOrCreationErrorZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceSignOrCreationErrorZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceSignOrCreationErrorZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceSignOrCreationErrorZ_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceSignOrCreationErrorZ_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_InvoiceSignOrCreationErrorZ_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1InvoiceSignOrCreationErrorZ_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_FilterZ_some
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1FilterZ_1some
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_FilterZ_none
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_COption_1FilterZ_1none
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    COption_FilterZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_COption_1FilterZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_LockedChannelMonitorNoneZ_ok
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1LockedChannelMonitorNoneZ_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_LockedChannelMonitorNoneZ_err
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CResult_1LockedChannelMonitorNoneZ_1err
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_LockedChannelMonitorNoneZ_is_ok
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CResult_1LockedChannelMonitorNoneZ_1is_1ok
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CResult_LockedChannelMonitorNoneZ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CResult_1LockedChannelMonitorNoneZ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CVec_OutPointZ_free
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CVec_1OutPointZ_1free
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_invoice_payment
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1invoice_1payment
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentPurpose_spontaneous_payment
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentPurpose_1spontaneous_1payment
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosureReason_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_counterparty_force_closed
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1counterparty_1force_1closed
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_holder_force_closed
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1holder_1force_1closed
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_cooperative_closure
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1cooperative_1closure
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_commitment_tx_confirmed
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1commitment_1tx_1confirmed
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_funding_timed_out
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1funding_1timed_1out
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_processing_error
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1processing_1error
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_disconnected_peer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1disconnected_1peer
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_outdated_channel_manager
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1outdated_1channel_1manager
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosureReason_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosureReason_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosureReason_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Event_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_funding_generation_ready
 * Signature: ([BJ[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1funding_1generation_1ready
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_received
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1received
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_sent
 * Signature: ([B[B[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1sent
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_path_failed
 * Signature: ([B[BZJZ[JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1path_1failed
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jboolean, jlong, jboolean, jlongArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_failed
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1failed
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_pending_htlcs_forwardable
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1pending_1htlcs_1forwardable
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_spendable_outputs
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1spendable_1outputs
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_forwarded
 * Signature: (JZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1forwarded
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_channel_closed
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1channel_1closed
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_discard_funding
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1discard_1funding
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_payment_path_successful
 * Signature: ([B[B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1payment_1path_1successful
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Event_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Event_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Event_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_accept_channel
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1accept_1channel
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_open_channel
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1open_1channel
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_funding_created
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1funding_1created
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_funding_signed
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1funding_1signed
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_funding_locked
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1funding_1locked
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_announcement_signatures
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1announcement_1signatures
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_update_htlcs
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1update_1htlcs
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_revoke_and_ack
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1revoke_1and_1ack
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_closing_signed
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1closing_1signed
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_shutdown
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1shutdown
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_channel_reestablish
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1channel_1reestablish
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_broadcast_channel_announcement
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1broadcast_1channel_1announcement
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_broadcast_node_announcement
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1broadcast_1node_1announcement
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_broadcast_channel_update
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1broadcast_1channel_1update
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_channel_update
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1channel_1update
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_handle_error
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1handle_1error
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_channel_range_query
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1channel_1range_1query
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_short_ids_query
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1short_1ids_1query
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEvent_send_reply_channel_range
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageSendEvent_1send_1reply_1channel_1range
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageSendEventsProvider_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageSendEventsProvider_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EventsProvider_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_EventsProvider_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    EventHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_EventHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_APIError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_apimisuse_error
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1apimisuse_1error
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_fee_rate_too_high
 * Signature: (Ljava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1fee_1rate_1too_1high
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_route_error
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1route_1error
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_channel_unavailable
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1channel_1unavailable
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_monitor_update_failed
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1monitor_1update_1failed
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    APIError_incompatible_shutdown_script
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_APIError_1incompatible_1shutdown_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    sign
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_sign
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    recover_pk
 * Signature: ([BLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_recover_1pk
  (JNIEnv *, jclass, jbyteArray, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    verify
 * Signature: ([BLjava/lang/String;[B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_verify
  (JNIEnv *, jclass, jbyteArray, jstring, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_clone
 * Signature: (J)Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_gossip
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1gossip
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_trace
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1trace
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_debug
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1debug
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_info
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1info
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_warn
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1warn
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_error
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1error
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Level_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Level_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Level_max
 * Signature: ()Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Level_1max
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_level
 * Signature: (J)Lorg/ldk/enums/Level;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Record_1get_1level
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_level
 * Signature: (JLorg/ldk/enums/Level;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1level
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_args
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Record_1get_1args
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_args
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1args
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_module_path
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Record_1get_1module_1path
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_module_path
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1module_1path
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_file
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Record_1get_1file
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_file
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1file
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_get_line
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_Record_1get_1line
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_set_line
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Record_1set_1line
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Record_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Record_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Record_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Logger_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Logger_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_minimum_depth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1minimum_1depth
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_minimum_depth
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1minimum_1depth
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_our_to_self_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1our_1to_1self_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_our_to_self_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1our_1to_1self_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_get_our_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1get_1our_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_set_our_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1set_1our_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_new
 * Signature: (ISJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1new
  (JNIEnv *, jclass, jint, jshort, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeConfig_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeConfig_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_min_funding_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1min_1funding_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_min_funding_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1min_1funding_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_max_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1max_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_max_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1max_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_min_max_htlc_value_in_flight_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1min_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_min_max_htlc_value_in_flight_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1min_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_max_channel_reserve_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1max_1channel_1reserve_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_max_channel_reserve_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1max_1channel_1reserve_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_min_max_accepted_htlcs
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1min_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_min_max_accepted_htlcs
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1min_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_max_minimum_depth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1max_1minimum_1depth
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_max_minimum_depth
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1max_1minimum_1depth
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_force_announced_channel_preference
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1force_1announced_1channel_1preference
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_force_announced_channel_preference
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1force_1announced_1channel_1preference
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_get_their_to_self_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1get_1their_1to_1self_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_set_their_to_self_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1set_1their_1to_1self_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_new
 * Signature: (JJJJSIZS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jshort, jint, jboolean, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelHandshakeLimits_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelHandshakeLimits_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_forwarding_fee_proportional_millionths
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1forwarding_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_forwarding_fee_proportional_millionths
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1forwarding_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_forwarding_fee_base_msat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1forwarding_1fee_1base_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_forwarding_fee_base_msat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1forwarding_1fee_1base_1msat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_cltv_expiry_delta
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_cltv_expiry_delta
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_announced_channel
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1announced_1channel
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_announced_channel
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1announced_1channel
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_commit_upfront_shutdown_pubkey
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1commit_1upfront_1shutdown_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_commit_upfront_shutdown_pubkey
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1commit_1upfront_1shutdown_1pubkey
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_max_dust_htlc_exposure_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1max_1dust_1htlc_1exposure_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_max_dust_htlc_exposure_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1max_1dust_1htlc_1exposure_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_get_force_close_avoidance_max_fee_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1get_1force_1close_1avoidance_1max_1fee_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_set_force_close_avoidance_max_fee_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1set_1force_1close_1avoidance_1max_1fee_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_new
 * Signature: (IISZZJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1new
  (JNIEnv *, jclass, jint, jint, jshort, jboolean, jboolean, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelConfig_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelConfig_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_own_channel_config
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1own_1channel_1config
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_own_channel_config
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1own_1channel_1config
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_peer_channel_config_limits
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1peer_1channel_1config_1limits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_peer_channel_config_limits
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1peer_1channel_1config_1limits
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_channel_options
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1channel_1options
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_channel_options
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1channel_1options
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_accept_forwards_to_priv_channels
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1accept_1forwards_1to_1priv_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_accept_forwards_to_priv_channels
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1accept_1forwards_1to_1priv_1channels
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_get_accept_inbound_channels
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_UserConfig_1get_1accept_1inbound_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_set_accept_inbound_channels
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UserConfig_1set_1accept_1inbound_1channels
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_new
 * Signature: (JJJZZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jboolean, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UserConfig_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UserConfig_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BestBlock_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BestBlock_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BestBlock_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_from_genesis
 * Signature: (Lorg/ldk/enums/Network;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BestBlock_1from_1genesis
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_new
 * Signature: ([BI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BestBlock_1new
  (JNIEnv *, jclass, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_block_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BestBlock_1block_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BestBlock_height
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_BestBlock_1height
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AccessError_clone
 * Signature: (J)Lorg/ldk/enums/AccessError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_AccessError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AccessError_unknown_chain
 * Signature: ()Lorg/ldk/enums/AccessError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_AccessError_1unknown_1chain
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AccessError_unknown_tx
 * Signature: ()Lorg/ldk/enums/AccessError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_AccessError_1unknown_1tx
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Access_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Access_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Listen_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Listen_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Confirm_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Confirm_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdateErr_clone
 * Signature: (J)Lorg/ldk/enums/ChannelMonitorUpdateErr;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdateErr_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdateErr_temporary_failure
 * Signature: ()Lorg/ldk/enums/ChannelMonitorUpdateErr;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdateErr_1temporary_1failure
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdateErr_permanent_failure
 * Signature: ()Lorg/ldk/enums/ChannelMonitorUpdateErr;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdateErr_1permanent_1failure
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Watch_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Watch_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Filter_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Filter_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_get_block_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1get_1block_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_set_block_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1set_1block_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_get_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1get_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_set_outpoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1set_1outpoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_get_script_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1get_1script_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_set_script_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1set_1script_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_new
 * Signature: ([BJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    WatchedOutput_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_WatchedOutput_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BroadcasterInterface_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BroadcasterInterface_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_clone
 * Signature: (J)Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_background
 * Signature: ()Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1background
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_normal
 * Signature: ()Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1normal
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_high_priority
 * Signature: ()Lorg/ldk/enums/ConfirmationTarget;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1high_1priority
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ConfirmationTarget_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ConfirmationTarget_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FeeEstimator_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FeeEstimator_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorUpdateId_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MonitorUpdateId_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorUpdateId_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorUpdateId_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorUpdateId_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorUpdateId_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorUpdateId_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorUpdateId_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorUpdateId_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_MonitorUpdateId_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Persist_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Persist_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LockedChannelMonitor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LockedChannelMonitor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_new
 * Signature: (JJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_get_claimable_balances
 * Signature: (J[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1get_1claimable_1balances
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_get_monitor
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1get_1monitor
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_list_monitors
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1list_1monitors
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_channel_monitor_updated
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1channel_1monitor_1updated
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_as_Listen
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1as_1Listen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_as_Confirm
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1as_1Confirm
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_as_Watch
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1as_1Watch
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainMonitor_as_EventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainMonitor_1as_1EventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_get_update_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1get_1update_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_set_update_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1set_1update_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitorUpdate_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitorUpdate_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_htlcevent
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1htlcevent
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_commitment_tx_confirmed
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1commitment_1tx_1confirmed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_update_completed
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1update_1completed
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_update_failed
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1update_1failed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MonitorEvent_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MonitorEvent_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCUpdate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCUpdate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCUpdate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCUpdate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCUpdate_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCUpdate_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCUpdate_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCUpdate_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Balance_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_claimable_on_channel_close
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1claimable_1on_1channel_1close
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_claimable_awaiting_confirmations
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1claimable_1awaiting_1confirmations
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_contentious_claimable
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1contentious_1claimable
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_maybe_claimable_htlcawaiting_timeout
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Balance_1maybe_1claimable_1htlcawaiting_1timeout
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Balance_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Balance_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_update_monitor
 * Signature: (JJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1update_1monitor
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_latest_update_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1latest_1update_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_funding_txo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1funding_1txo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_outputs_to_watch
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1outputs_1to_1watch
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_load_outputs_to_watch
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1load_1outputs_1to_1watch
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_and_clear_pending_monitor_events
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1and_1clear_1pending_1monitor_1events
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_and_clear_pending_events
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1and_1clear_1pending_1events
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_latest_holder_commitment_txn
 * Signature: (JJ)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1latest_1holder_1commitment_1txn
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_block_connected
 * Signature: (J[B[JIJJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1block_1connected
  (JNIEnv *, jclass, jlong, jbyteArray, jlongArray, jint, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_block_disconnected
 * Signature: (J[BIJJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1block_1disconnected
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_transactions_confirmed
 * Signature: (J[B[JIJJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1transactions_1confirmed
  (JNIEnv *, jclass, jlong, jbyteArray, jlongArray, jint, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_transaction_unconfirmed
 * Signature: (J[BJJJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1transaction_1unconfirmed
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_best_block_updated
 * Signature: (J[BIJJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1best_1block_1updated
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_relevant_txids
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1relevant_1txids
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_current_best_block
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1current_1best_1block
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMonitor_get_claimable_balances
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelMonitor_1get_1claimable_1balances
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BlockHashChannelMonitorZ_read
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BlockHashChannelMonitorZ_1read
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutPoint_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_get_txid
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OutPoint_1get_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_set_txid
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutPoint_1set_1txid
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_get_index
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_OutPoint_1get_1index
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_set_index
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OutPoint_1set_1index
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_new
 * Signature: ([BS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutPoint_1new
  (JNIEnv *, jclass, jbyteArray, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutPoint_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutPoint_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_OutPoint_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutPoint_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_to_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OutPoint_1to_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OutPoint_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OutPoint_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OutPoint_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_outpoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1outpoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_to_self_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1to_1self_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_to_self_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1to_1self_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_output
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1output
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_revocation_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1revocation_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_revocation_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1revocation_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_channel_keys_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1channel_1keys_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_channel_keys_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1channel_1keys_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_get_channel_value_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1get_1channel_1value_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_set_channel_value_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1set_1channel_1value_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_new
 * Signature: (J[BSJ[B[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jshort, jlong, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DelayedPaymentOutputDescriptor_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DelayedPaymentOutputDescriptor_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_get_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1get_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_set_outpoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1set_1outpoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_set_output
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1set_1output
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_get_channel_keys_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1get_1channel_1keys_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_set_channel_keys_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1set_1channel_1keys_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_get_channel_value_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1get_1channel_1value_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_set_channel_value_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1set_1channel_1value_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_new
 * Signature: (JJ[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1new
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    StaticPaymentOutputDescriptor_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_StaticPaymentOutputDescriptor_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_static_output
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1static_1output
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_delayed_payment_output
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1delayed_1payment_1output
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_static_payment_output
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1static_1payment_1output
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SpendableOutputDescriptor_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SpendableOutputDescriptor_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BaseSign_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BaseSign_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sign_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sign_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sign_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sign_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sign_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Sign_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysInterface_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_KeysInterface_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_funding_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1funding_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_set_funding_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1set_1funding_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_revocation_base_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1revocation_1base_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_set_revocation_base_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1set_1revocation_1base_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_payment_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1payment_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_set_payment_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1set_1payment_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_delayed_payment_base_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1delayed_1payment_1base_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_set_delayed_payment_base_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1set_1delayed_1payment_1base_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_htlc_base_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1htlc_1base_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_set_htlc_base_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1set_1htlc_1base_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_commitment_seed
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1commitment_1seed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_set_commitment_seed
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1set_1commitment_1seed
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_new
 * Signature: ([B[B[B[B[B[BJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_counterparty_pubkeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1counterparty_1pubkeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_counterparty_selected_contest_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1counterparty_1selected_1contest_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_holder_selected_contest_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1holder_1selected_1contest_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_is_outbound
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1is_1outbound
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_funding_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1funding_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_get_channel_parameters
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1get_1channel_1parameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_opt_anchors
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1opt_1anchors
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_sign_counterparty_payment_input
 * Signature: (J[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1sign_1counterparty_1payment_1input
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_sign_dynamic_p2wsh_input
 * Signature: (J[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1sign_1dynamic_1p2wsh_1input
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_as_BaseSign
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1as_1BaseSign
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_as_Sign
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1as_1Sign
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InMemorySigner_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InMemorySigner_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_KeysManager_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_new
 * Signature: ([BJI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysManager_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_derive_channel_keys
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysManager_1derive_1channel_1keys
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_spend_spendable_outputs
 * Signature: (J[J[J[BI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysManager_1spend_1spendable_1outputs
  (JNIEnv *, jclass, jlong, jlongArray, jlongArray, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    KeysManager_as_KeysInterface
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_KeysManager_1as_1KeysInterface
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChainParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_get_network
 * Signature: (J)Lorg/ldk/enums/Network;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChainParameters_1get_1network
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_set_network
 * Signature: (JLorg/ldk/enums/Network;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChainParameters_1set_1network
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_get_best_block
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainParameters_1get_1best_1block
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_set_best_block
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChainParameters_1set_1best_1block
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_new
 * Signature: (Lorg/ldk/enums/Network;J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainParameters_1new
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChainParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChainParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_get_fee_base_msat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1get_1fee_1base_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_set_fee_base_msat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1set_1fee_1base_1msat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_get_fee_proportional_millionths
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1get_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_set_fee_proportional_millionths
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1set_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_get_cltv_expiry_delta
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_set_cltv_expiry_delta
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_new
 * Signature: (IIS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1new
  (JNIEnv *, jclass, jint, jint, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyForwardingInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyForwardingInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_get_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1get_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_set_node_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1set_1node_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_get_unspendable_punishment_reserve
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1get_1unspendable_1punishment_1reserve
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_set_unspendable_punishment_reserve
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1set_1unspendable_1punishment_1reserve
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_get_forwarding_info
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1get_1forwarding_1info
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_set_forwarding_info
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1set_1forwarding_1info
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_new
 * Signature: ([BJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelCounterparty_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelCounterparty_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_counterparty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1counterparty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_counterparty
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1counterparty
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_funding_txo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1funding_1txo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_funding_txo
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1funding_1txo
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_channel_value_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1channel_1value_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_channel_value_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1channel_1value_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_unspendable_punishment_reserve
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1unspendable_1punishment_1reserve
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_unspendable_punishment_reserve
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1unspendable_1punishment_1reserve
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_user_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1user_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_user_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1user_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_balance_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1balance_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_balance_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1balance_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_outbound_capacity_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1outbound_1capacity_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_outbound_capacity_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1outbound_1capacity_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_inbound_capacity_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1inbound_1capacity_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_inbound_capacity_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1inbound_1capacity_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_confirmations_required
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1confirmations_1required
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_confirmations_required
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1confirmations_1required
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_force_close_spend_delay
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1force_1close_1spend_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_force_close_spend_delay
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1force_1close_1spend_1delay
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_is_outbound
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1is_1outbound
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_is_outbound
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1is_1outbound
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_is_funding_locked
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1is_1funding_1locked
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_is_funding_locked
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1is_1funding_1locked
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_is_usable
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1is_1usable
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_is_usable
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1is_1usable
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_get_is_public
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1get_1is_1public
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_set_is_public
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1set_1is_1public
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_new
 * Signature: ([BJJJJJJJJJJJZZZZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jboolean, jboolean, jboolean, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelDetails_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelDetails_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentSendFailure_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentSendFailure_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentSendFailure_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentSendFailure_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentSendFailure_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentSendFailure_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentSendFailure_parameter_error
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentSendFailure_1parameter_1error
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentSendFailure_path_parameter_error
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentSendFailure_1path_1parameter_1error
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentSendFailure_all_failed_retry_safe
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentSendFailure_1all_1failed_1retry_1safe
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentSendFailure_partial_failure
 * Signature: ([JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentSendFailure_1partial_1failure
  (JNIEnv *, jclass, jlongArray, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_new
 * Signature: (JJJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_get_current_default_configuration
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1get_1current_1default_1configuration
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_create_channel
 * Signature: (J[BJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1create_1channel
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_list_channels
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelManager_1list_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_list_usable_channels
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_ChannelManager_1list_1usable_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_close_channel
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1close_1channel
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_close_channel_with_target_feerate
 * Signature: (J[BI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1close_1channel_1with_1target_1feerate
  (JNIEnv *, jclass, jlong, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_force_close_channel
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1force_1close_1channel
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_force_close_all_channels
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1force_1close_1all_1channels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_send_payment
 * Signature: (JJ[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1send_1payment
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_retry_payment
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1retry_1payment
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_abandon_payment
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1abandon_1payment
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_send_spontaneous_payment
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1send_1spontaneous_1payment
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_funding_transaction_generated
 * Signature: (J[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1funding_1transaction_1generated
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_broadcast_node_announcement
 * Signature: (J[B[B[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1broadcast_1node_1announcement
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_process_pending_htlc_forwards
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1process_1pending_1htlc_1forwards
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_timer_tick_occurred
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1timer_1tick_1occurred
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_fail_htlc_backwards
 * Signature: (J[B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelManager_1fail_1htlc_1backwards
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_claim_funds
 * Signature: (J[B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelManager_1claim_1funds
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_get_our_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelManager_1get_1our_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_create_inbound_payment
 * Signature: (JJI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1create_1inbound_1payment
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_create_inbound_payment_legacy
 * Signature: (JJI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1create_1inbound_1payment_1legacy
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_create_inbound_payment_for_hash
 * Signature: (J[BJI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1create_1inbound_1payment_1for_1hash
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_create_inbound_payment_for_hash_legacy
 * Signature: (J[BJI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1create_1inbound_1payment_1for_1hash_1legacy
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_get_payment_preimage
 * Signature: (J[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1get_1payment_1preimage
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_MessageSendEventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1MessageSendEventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_EventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1EventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_Listen
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1Listen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_Confirm
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1Confirm
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_await_persistable_update_timeout
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelManager_1await_1persistable_1update_1timeout
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_await_persistable_update
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManager_1await_1persistable_1update
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_current_best_block
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1current_1best_1block
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_ChannelMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1ChannelMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelManager_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_keys_manager
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1keys_1manager
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_keys_manager
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1keys_1manager
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_fee_estimator
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1fee_1estimator
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_fee_estimator
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1fee_1estimator
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_chain_monitor
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1chain_1monitor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_chain_monitor
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1chain_1monitor
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_tx_broadcaster
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1tx_1broadcaster
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_tx_broadcaster
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1tx_1broadcaster
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_logger
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1logger
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_logger
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1logger
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_get_default_config
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1get_1default_1config
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_set_default_config
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1set_1default_1config
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerReadArgs_new
 * Signature: (JJJJJJ[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManagerReadArgs_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    C2Tuple_BlockHashChannelManagerZ_read
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_C2Tuple_1BlockHashChannelManagerZ_1read
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DecodeError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DecodeError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DecodeError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Init_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Init_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_new
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1new
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_get_data
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1get_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_set_data
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1set_1data
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_new
 * Signature: ([BLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1new
  (JNIEnv *, jclass, jbyteArray, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Ping_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_get_ponglen
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_Ping_1get_1ponglen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_set_ponglen
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Ping_1set_1ponglen
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_get_byteslen
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_Ping_1get_1byteslen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_set_byteslen
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Ping_1set_1byteslen
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_new
 * Signature: (SS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Ping_1new
  (JNIEnv *, jclass, jshort, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Ping_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Ping_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Pong_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_get_byteslen
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_Pong_1get_1byteslen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_set_byteslen
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Pong_1set_1byteslen
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_new
 * Signature: (S)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Pong_1new
  (JNIEnv *, jclass, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Pong_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Pong_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_temporary_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1temporary_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_temporary_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1temporary_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_funding_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1funding_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_funding_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1funding_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_push_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1push_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_push_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1push_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_dust_limit_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1dust_1limit_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_dust_limit_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1dust_1limit_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_max_htlc_value_in_flight_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_max_htlc_value_in_flight_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_channel_reserve_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1channel_1reserve_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_channel_reserve_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1channel_1reserve_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_feerate_per_kw
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1feerate_1per_1kw
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_feerate_per_kw
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1feerate_1per_1kw
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_to_self_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1to_1self_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_to_self_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1to_1self_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_max_accepted_htlcs
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_max_accepted_htlcs
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_funding_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1funding_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_funding_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1funding_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_revocation_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1revocation_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_revocation_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1revocation_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_payment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1payment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_payment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1payment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_delayed_payment_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1delayed_1payment_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_delayed_payment_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1delayed_1payment_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_htlc_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1htlc_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_htlc_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1htlc_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_first_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1first_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_first_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1first_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_channel_flags
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1channel_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_channel_flags
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1channel_1flags
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_get_channel_type
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1get_1channel_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_set_channel_type
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_OpenChannel_1set_1channel_1type
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_temporary_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1temporary_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_temporary_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1temporary_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_dust_limit_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1dust_1limit_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_dust_limit_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1dust_1limit_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_max_htlc_value_in_flight_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_max_htlc_value_in_flight_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1max_1htlc_1value_1in_1flight_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_channel_reserve_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1channel_1reserve_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_channel_reserve_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1channel_1reserve_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_minimum_depth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1minimum_1depth
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_minimum_depth
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1minimum_1depth
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_to_self_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1to_1self_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_to_self_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1to_1self_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_max_accepted_htlcs
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_max_accepted_htlcs
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1max_1accepted_1htlcs
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_funding_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1funding_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_funding_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1funding_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_revocation_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1revocation_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_revocation_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1revocation_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_payment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1payment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_payment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1payment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_delayed_payment_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1delayed_1payment_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_delayed_payment_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1delayed_1payment_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_htlc_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1htlc_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_htlc_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1htlc_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_get_first_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1get_1first_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_set_first_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1set_1first_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingCreated_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_get_temporary_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingCreated_1get_1temporary_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_set_temporary_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingCreated_1set_1temporary_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_get_funding_txid
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingCreated_1get_1funding_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_set_funding_txid
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingCreated_1set_1funding_1txid
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_get_funding_output_index
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_FundingCreated_1get_1funding_1output_1index
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_set_funding_output_index
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingCreated_1set_1funding_1output_1index
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_get_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingCreated_1get_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_set_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingCreated_1set_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_new
 * Signature: ([B[BS[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingCreated_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jshort, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingCreated_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingCreated_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingSigned_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingSigned_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingSigned_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_get_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingSigned_1get_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_set_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingSigned_1set_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_new
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingSigned_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingSigned_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingSigned_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingLocked_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingLocked_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingLocked_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingLocked_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingLocked_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingLocked_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingLocked_get_next_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingLocked_1get_1next_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingLocked_set_next_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FundingLocked_1set_1next_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingLocked_new
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingLocked_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingLocked_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingLocked_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingLocked_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingLocked_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Shutdown_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Shutdown_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Shutdown_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_get_scriptpubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Shutdown_1get_1scriptpubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_set_scriptpubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Shutdown_1set_1scriptpubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_new
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Shutdown_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Shutdown_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Shutdown_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_get_min_fee_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1get_1min_1fee_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_set_min_fee_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1set_1min_1fee_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_get_max_fee_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1get_1max_1fee_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_set_max_fee_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1set_1max_1fee_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_get_fee_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1get_1fee_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_set_fee_satoshis
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1set_1fee_1satoshis
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_get_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1get_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_set_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1set_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_get_fee_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1get_1fee_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_set_fee_range
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1set_1fee_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_new
 * Signature: ([BJ[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_htlc_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1htlc_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_htlc_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1htlc_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_amount_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1amount_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_amount_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1amount_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_payment_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_payment_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1payment_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_get_cltv_expiry
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1get_1cltv_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_set_cltv_expiry
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1set_1cltv_1expiry
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_get_htlc_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1get_1htlc_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_set_htlc_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1set_1htlc_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_get_payment_preimage
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1get_1payment_1preimage
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_set_payment_preimage
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1set_1payment_1preimage
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_new
 * Signature: ([BJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_get_htlc_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1get_1htlc_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_set_htlc_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1set_1htlc_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_get_htlc_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1get_1htlc_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_set_htlc_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1set_1htlc_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_get_failure_code
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1get_1failure_1code
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_set_failure_code
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1set_1failure_1code
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_get_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1get_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_set_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1set_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_set_htlc_signatures
 * Signature: (J[[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1set_1htlc_1signatures
  (JNIEnv *, jclass, jlong, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_new
 * Signature: ([B[B[[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_get_per_commitment_secret
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1get_1per_1commitment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_set_per_commitment_secret
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1set_1per_1commitment_1secret
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_get_next_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1get_1next_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_set_next_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1set_1next_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_new
 * Signature: ([B[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFee_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFee_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFee_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_get_feerate_per_kw
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_UpdateFee_1get_1feerate_1per_1kw
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_set_feerate_per_kw
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UpdateFee_1set_1feerate_1per_1kw
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_new
 * Signature: ([BI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFee_1new
  (JNIEnv *, jclass, jbyteArray, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFee_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFee_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DataLossProtect_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DataLossProtect_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DataLossProtect_get_your_last_per_commitment_secret
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DataLossProtect_1get_1your_1last_1per_1commitment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DataLossProtect_set_your_last_per_commitment_secret
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DataLossProtect_1set_1your_1last_1per_1commitment_1secret
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DataLossProtect_get_my_current_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DataLossProtect_1get_1my_1current_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DataLossProtect_set_my_current_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DataLossProtect_1set_1my_1current_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DataLossProtect_new
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DataLossProtect_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DataLossProtect_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DataLossProtect_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DataLossProtect_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DataLossProtect_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_get_next_local_commitment_number
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1get_1next_1local_1commitment_1number
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_set_next_local_commitment_number
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1set_1next_1local_1commitment_1number
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_get_next_remote_commitment_number
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1get_1next_1remote_1commitment_1number
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_set_next_remote_commitment_number
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1set_1next_1remote_1commitment_1number
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_get_channel_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1get_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_set_channel_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1set_1channel_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_get_node_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1get_1node_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_set_node_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1set_1node_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_get_bitcoin_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1get_1bitcoin_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_set_bitcoin_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1set_1bitcoin_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_new
 * Signature: ([BJ[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetAddress_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetAddress_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetAddress_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetAddress_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetAddress_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetAddress_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetAddress_ipv4
 * Signature: ([BS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetAddress_1ipv4
  (JNIEnv *, jclass, jbyteArray, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetAddress_ipv6
 * Signature: ([BS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetAddress_1ipv6
  (JNIEnv *, jclass, jbyteArray, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetAddress_onion_v2
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetAddress_1onion_1v2
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetAddress_onion_v3
 * Signature: ([BSBS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetAddress_1onion_1v3
  (JNIEnv *, jclass, jbyteArray, jshort, jbyte, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetAddress_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NetAddress_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetAddress_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetAddress_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_timestamp
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_timestamp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1timestamp
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_node_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1node_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_rgb
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1rgb
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_rgb
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1rgb
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_get_alias
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1get_1alias
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_alias
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1alias
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_set_addresses
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1set_1addresses
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_get_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1get_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_set_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1set_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_get_contents
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1get_1contents
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_set_contents
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1set_1contents
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_node_id_1
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1node_1id_11
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_node_id_1
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1node_1id_11
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_node_id_2
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1node_1id_12
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_node_id_2
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1node_1id_12
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_bitcoin_key_1
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1bitcoin_1key_11
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_bitcoin_key_1
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1bitcoin_1key_11
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_get_bitcoin_key_2
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1get_1bitcoin_1key_12
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_set_bitcoin_key_2
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1set_1bitcoin_1key_12
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_get_node_signature_1
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1get_1node_1signature_11
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_set_node_signature_1
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1set_1node_1signature_11
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_get_node_signature_2
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1get_1node_1signature_12
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_set_node_signature_2
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1set_1node_1signature_12
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_get_bitcoin_signature_1
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1get_1bitcoin_1signature_11
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_set_bitcoin_signature_1
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1set_1bitcoin_1signature_11
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_get_bitcoin_signature_2
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1get_1bitcoin_1signature_12
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_set_bitcoin_signature_2
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1set_1bitcoin_1signature_12
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_get_contents
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1get_1contents
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_set_contents
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1set_1contents
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_new
 * Signature: ([B[B[B[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_timestamp
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_timestamp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1timestamp
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_flags
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1flags
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_flags
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1flags
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_cltv_expiry_delta
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_cltv_expiry_delta
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_fee_base_msat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1fee_1base_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_fee_base_msat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1fee_1base_1msat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_get_fee_proportional_millionths
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1get_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_set_fee_proportional_millionths
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1set_1fee_1proportional_1millionths
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_get_signature
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1get_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_set_signature
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1set_1signature
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_get_contents
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1get_1contents
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_set_contents
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1set_1contents
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_new
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1new
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_get_first_blocknum
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1get_1first_1blocknum
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_set_first_blocknum
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1set_1first_1blocknum
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_get_number_of_blocks
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1get_1number_1of_1blocks
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_set_number_of_blocks
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1set_1number_1of_1blocks
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_new
 * Signature: ([BII)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1new
  (JNIEnv *, jclass, jbyteArray, jint, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_get_first_blocknum
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1get_1first_1blocknum
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_set_first_blocknum
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1set_1first_1blocknum
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_get_number_of_blocks
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1get_1number_1of_1blocks
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_set_number_of_blocks
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1set_1number_1of_1blocks
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_get_sync_complete
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1get_1sync_1complete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_set_sync_complete
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1set_1sync_1complete
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_set_short_channel_ids
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1set_1short_1channel_1ids
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_new
 * Signature: ([BIIZ[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1new
  (JNIEnv *, jclass, jbyteArray, jint, jint, jboolean, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_set_short_channel_ids
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1set_1short_1channel_1ids
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_new
 * Signature: ([B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1new
  (JNIEnv *, jclass, jbyteArray, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_get_full_information
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1get_1full_1information
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_set_full_information
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1set_1full_1information
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_new
 * Signature: ([BZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1new
  (JNIEnv *, jclass, jbyteArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_get_chain_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1get_1chain_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_set_chain_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1set_1chain_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_get_first_timestamp
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1get_1first_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_set_first_timestamp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1set_1first_1timestamp
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_get_timestamp_range
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1get_1timestamp_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_set_timestamp_range
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1set_1timestamp_1range
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_new
 * Signature: ([BII)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1new
  (JNIEnv *, jclass, jbyteArray, jint, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErrorAction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_disconnect_peer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1disconnect_1peer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_ignore_error
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1ignore_1error
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_ignore_and_log
 * Signature: (Lorg/ldk/enums/Level;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1ignore_1and_1log
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_ignore_duplicate_gossip
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1ignore_1duplicate_1gossip
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorAction_send_error_message
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorAction_1send_1error_1message
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LightningError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_get_err
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_LightningError_1get_1err
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_set_err
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LightningError_1set_1err
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_get_action
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LightningError_1get_1action
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_set_action
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LightningError_1set_1action
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_new
 * Signature: (Ljava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LightningError_1new
  (JNIEnv *, jclass, jstring, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LightningError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LightningError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_LightningError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_get_update_add_htlcs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1get_1update_1add_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_set_update_add_htlcs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1set_1update_1add_1htlcs
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_get_update_fulfill_htlcs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1get_1update_1fulfill_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_set_update_fulfill_htlcs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1set_1update_1fulfill_1htlcs
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_get_update_fail_htlcs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1get_1update_1fail_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_set_update_fail_htlcs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1set_1update_1fail_1htlcs
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_get_update_fail_malformed_htlcs
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1get_1update_1fail_1malformed_1htlcs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_set_update_fail_malformed_htlcs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1set_1update_1fail_1malformed_1htlcs
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_get_update_fee
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1get_1update_1fee
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_set_update_fee
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1set_1update_1fee
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_get_commitment_signed
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1get_1commitment_1signed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_set_commitment_signed
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1set_1commitment_1signed
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_new
 * Signature: ([J[J[J[JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1new
  (JNIEnv *, jclass, jlongArray, jlongArray, jlongArray, jlongArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentUpdate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentUpdate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RoutingMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AcceptChannel_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AcceptChannel_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    AnnouncementSignatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_AnnouncementSignatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelReestablish_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelReestablish_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSigned_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSigned_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingSignedFeeRange_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingSignedFeeRange_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentSigned_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentSigned_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingCreated_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingCreated_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingCreated_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingSigned_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingSigned_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingSigned_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingLocked_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_FundingLocked_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FundingLocked_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FundingLocked_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Init_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Init_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Init_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_OpenChannel_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    OpenChannel_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_OpenChannel_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RevokeAndACK_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RevokeAndACK_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Shutdown_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Shutdown_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Shutdown_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailHTLC_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailHTLC_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFailMalformedHTLC_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFailMalformedHTLC_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFee_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFee_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFee_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateFulfillHTLC_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateFulfillHTLC_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UpdateAddHTLC_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UpdateAddHTLC_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Ping_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Ping_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Ping_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Pong_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Pong_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Pong_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelAnnouncement_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelAnnouncement_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelAnnouncement_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelAnnouncement_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedChannelUpdate_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedChannelUpdate_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelUpdate_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelUpdate_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErrorMessage_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErrorMessage_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    UnsignedNodeAnnouncement_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_UnsignedNodeAnnouncement_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncement_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncement_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryShortChannelIds_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_QueryShortChannelIds_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyShortChannelIdsEnd_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyShortChannelIdsEnd_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_end_blocknum
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1end_1blocknum
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    QueryChannelRange_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_QueryChannelRange_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReplyChannelRange_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ReplyChannelRange_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    GossipTimestampFilter_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_GossipTimestampFilter_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CustomMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_MessageSendEventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1MessageSendEventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_RoutingMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1RoutingMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_CustomMessageReader
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1CustomMessageReader
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    IgnoringMessageHandler_as_CustomMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_IgnoringMessageHandler_1as_1CustomMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroringMessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ErroringMessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroringMessageHandler_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErroringMessageHandler_1new
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroringMessageHandler_as_MessageSendEventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErroringMessageHandler_1as_1MessageSendEventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ErroringMessageHandler_as_ChannelMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ErroringMessageHandler_1as_1ChannelMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_get_chan_handler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageHandler_1get_1chan_1handler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_set_chan_handler
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageHandler_1set_1chan_1handler
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_get_route_handler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageHandler_1get_1route_1handler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_set_route_handler
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MessageHandler_1set_1route_1handler
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MessageHandler_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MessageHandler_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketDescriptor_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketDescriptor_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketDescriptor_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SocketDescriptor_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SocketDescriptor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SocketDescriptor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerHandleError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerHandleError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerHandleError_get_no_connection_possible
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PeerHandleError_1get_1no_1connection_1possible
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerHandleError_set_no_connection_possible
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerHandleError_1set_1no_1connection_1possible
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerHandleError_new
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerHandleError_1new
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerHandleError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerHandleError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerHandleError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerHandleError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_new
 * Signature: (J[B[BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerManager_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_get_peer_node_ids
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_PeerManager_1get_1peer_1node_1ids
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_new_outbound_connection
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerManager_1new_1outbound_1connection
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_new_inbound_connection
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerManager_1new_1inbound_1connection
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_write_buffer_space_avail
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerManager_1write_1buffer_1space_1avail
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_read_event
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PeerManager_1read_1event
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_process_events
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1process_1events
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_socket_disconnected
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1socket_1disconnected
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_disconnect_by_node_id
 * Signature: (J[BZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1disconnect_1by_1node_1id
  (JNIEnv *, jclass, jlong, jbyteArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_disconnect_all_peers
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1disconnect_1all_1peers
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PeerManager_timer_tick_occurred
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PeerManager_1timer_1tick_1occurred
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    htlc_success_tx_weight
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_htlc_1success_1tx_1weight
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    htlc_timeout_tx_weight
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_htlc_1timeout_1tx_1weight
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    build_commitment_secret
 * Signature: ([BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_build_1commitment_1secret
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    build_closing_transaction
 * Signature: (JJ[B[BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_build_1closing_1transaction
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    derive_private_key
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_derive_1private_1key
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    derive_public_key
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_derive_1public_1key
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    derive_private_revocation_key
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_derive_1private_1revocation_1key
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    derive_public_revocation_key
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_derive_1public_1revocation_1key
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_get_per_commitment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1get_1per_1commitment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_set_per_commitment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1set_1per_1commitment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_get_revocation_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1get_1revocation_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_set_revocation_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1set_1revocation_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_get_broadcaster_htlc_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1get_1broadcaster_1htlc_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_set_broadcaster_htlc_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1set_1broadcaster_1htlc_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_get_countersignatory_htlc_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1get_1countersignatory_1htlc_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_set_countersignatory_htlc_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1set_1countersignatory_1htlc_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_get_broadcaster_delayed_payment_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1get_1broadcaster_1delayed_1payment_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_set_broadcaster_delayed_payment_key
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1set_1broadcaster_1delayed_1payment_1key
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_new
 * Signature: ([B[B[B[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_get_funding_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1get_1funding_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_set_funding_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1set_1funding_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_get_revocation_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1get_1revocation_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_set_revocation_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1set_1revocation_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_get_payment_point
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1get_1payment_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_set_payment_point
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1set_1payment_1point
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_get_delayed_payment_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1get_1delayed_1payment_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_set_delayed_payment_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1set_1delayed_1payment_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_get_htlc_basepoint
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1get_1htlc_1basepoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_set_htlc_basepoint
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1set_1htlc_1basepoint
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_new
 * Signature: ([B[B[B[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelPublicKeys_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelPublicKeys_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_derive_new
 * Signature: ([B[B[B[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1derive_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TxCreationKeys_from_channel_static_keys
 * Signature: ([BJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TxCreationKeys_1from_1channel_1static_1keys
  (JNIEnv *, jclass, jbyteArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_revokeable_redeemscript
 * Signature: ([BS[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_get_1revokeable_1redeemscript
  (JNIEnv *, jclass, jbyteArray, jshort, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_get_offered
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1get_1offered
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_set_offered
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1set_1offered
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_get_amount_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1get_1amount_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_set_amount_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1set_1amount_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_get_cltv_expiry
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1get_1cltv_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_set_cltv_expiry
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1set_1cltv_1expiry
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_get_payment_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1get_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_set_payment_hash
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1set_1payment_1hash
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_get_transaction_output_index
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1get_1transaction_1output_1index
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_set_transaction_output_index
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1set_1transaction_1output_1index
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_new
 * Signature: (ZJI[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1new
  (JNIEnv *, jclass, jboolean, jlong, jint, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HTLCOutputInCommitment_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HTLCOutputInCommitment_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_htlc_redeemscript
 * Signature: (JZJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_get_1htlc_1redeemscript
  (JNIEnv *, jclass, jlong, jboolean, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    make_funding_redeemscript
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_make_1funding_1redeemscript
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    build_htlc_transaction
 * Signature: ([BISJZ[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_build_1htlc_1transaction
  (JNIEnv *, jclass, jbyteArray, jint, jshort, jlong, jboolean, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_anchor_redeemscript
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_get_1anchor_1redeemscript
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_get_holder_pubkeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1get_1holder_1pubkeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_set_holder_pubkeys
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1set_1holder_1pubkeys
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_get_holder_selected_contest_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1get_1holder_1selected_1contest_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_set_holder_selected_contest_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1set_1holder_1selected_1contest_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_get_is_outbound_from_holder
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1get_1is_1outbound_1from_1holder
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_set_is_outbound_from_holder
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1set_1is_1outbound_1from_1holder
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_get_counterparty_parameters
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1get_1counterparty_1parameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_set_counterparty_parameters
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1set_1counterparty_1parameters
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_get_funding_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1get_1funding_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_set_funding_outpoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1set_1funding_1outpoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_get_opt_anchors
 * Signature: (J)Lorg/ldk/enums/COption_NoneZ;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1get_1opt_1anchors
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_set_opt_anchors
 * Signature: (JLorg/ldk/enums/COption_NoneZ;)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1set_1opt_1anchors
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_new
 * Signature: (JSZJJLorg/ldk/enums/COption_NoneZ;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1new
  (JNIEnv *, jclass, jlong, jshort, jboolean, jlong, jlong, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_get_pubkeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1get_1pubkeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_set_pubkeys
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1set_1pubkeys
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_get_selected_contest_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1get_1selected_1contest_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_set_selected_contest_delay
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1set_1selected_1contest_1delay
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_new
 * Signature: (JS)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1new
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_is_populated
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1is_1populated
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_as_holder_broadcastable
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1as_1holder_1broadcastable
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_as_counterparty_broadcastable
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1as_1counterparty_1broadcastable
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CounterpartyChannelTransactionParameters_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CounterpartyChannelTransactionParameters_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTransactionParameters_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTransactionParameters_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_broadcaster_pubkeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1broadcaster_1pubkeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_countersignatory_pubkeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1countersignatory_1pubkeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_contest_delay
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1contest_1delay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_is_outbound
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1is_1outbound
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_funding_outpoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1funding_1outpoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectedChannelTransactionParameters_opt_anchors
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DirectedChannelTransactionParameters_1opt_1anchors
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_get_counterparty_sig
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1get_1counterparty_1sig
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_set_counterparty_sig
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1set_1counterparty_1sig
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_set_counterparty_htlc_sigs
 * Signature: (J[[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1set_1counterparty_1htlc_1sigs
  (JNIEnv *, jclass, jlong, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    HolderCommitmentTransaction_new
 * Signature: (J[B[[B[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_HolderCommitmentTransaction_1new
  (JNIEnv *, jclass, jlong, jbyteArray, jobjectArray, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_get_transaction
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1get_1transaction
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_set_transaction
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1set_1transaction
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_get_txid
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1get_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_set_txid
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1set_1txid
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_new
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1new
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_get_sighash_all
 * Signature: (J[BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1get_1sighash_1all
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BuiltCommitmentTransaction_sign
 * Signature: (J[B[BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_BuiltCommitmentTransaction_1sign
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_new
 * Signature: (JJ[B[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1new
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_trust
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1trust
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_verify
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1verify
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_to_holder_value_sat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1to_1holder_1value_1sat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_to_counterparty_value_sat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1to_1counterparty_1value_1sat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_to_holder_script
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1to_1holder_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ClosingTransaction_to_counterparty_script
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ClosingTransaction_1to_1counterparty_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedClosingTransaction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrustedClosingTransaction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedClosingTransaction_built_transaction
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrustedClosingTransaction_1built_1transaction
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedClosingTransaction_get_sighash_all
 * Signature: (J[BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrustedClosingTransaction_1get_1sighash_1all
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedClosingTransaction_sign
 * Signature: (J[B[BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrustedClosingTransaction_1sign
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_commitment_number
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1commitment_1number
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_to_broadcaster_value_sat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1to_1broadcaster_1value_1sat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_to_countersignatory_value_sat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1to_1countersignatory_1value_1sat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_feerate_per_kw
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1feerate_1per_1kw
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_trust
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1trust
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CommitmentTransaction_verify
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_CommitmentTransaction_1verify
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_txid
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1txid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_built_transaction
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1built_1transaction
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_keys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1keys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_opt_anchors
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1opt_1anchors
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    TrustedCommitmentTransaction_get_htlc_sigs
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_TrustedCommitmentTransaction_1get_1htlc_1sigs
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    get_commitment_transaction_number_obscure_factor
 * Signature: ([B[BZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_get_1commitment_1transaction_1number_1obscure_1factor
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InvoiceFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InitFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_known
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1known
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InitFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_known
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1known
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_known
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1known
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceFeatures_known
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceFeatures_1known
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InvoiceFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_empty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1empty
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_known
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1known
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_requires_unknown_bits
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1requires_1unknown_1bits
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InitFeatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InitFeatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InitFeatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelFeatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelFeatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeFeatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeFeatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceFeatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvoiceFeatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceFeatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceFeatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelTypeFeatures_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelTypeFeatures_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvalidShutdownScript_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvalidShutdownScript_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvalidShutdownScript_get_script
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_InvalidShutdownScript_1get_1script
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvalidShutdownScript_set_script
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvalidShutdownScript_1set_1script
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvalidShutdownScript_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvalidShutdownScript_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvalidShutdownScript_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvalidShutdownScript_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvalidShutdownScript_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvalidShutdownScript_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_new_p2wpkh
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1new_1p2wpkh
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_new_p2wsh
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1new_1p2wsh
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_new_witness_program
 * Signature: (B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1new_1witness_1program
  (JNIEnv *, jclass, jbyte, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_into_inner
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1into_1inner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_as_legacy_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1as_1legacy_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ShutdownScript_is_compatible
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ShutdownScript_1is_1compatible
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CustomMessageReader_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_CustomMessageReader_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Type_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Type_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Type_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Type_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Type_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Type_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeId_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeId_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeId_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_from_pubkey
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeId_1from_1pubkey
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_as_slice
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeId_1as_1slice
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeId_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeId_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeId_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeId_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReadOnlyNetworkGraph_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ReadOnlyNetworkGraph_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_channel_update_message
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1channel_1update_1message
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_channel_closed
 * Signature: (JZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1channel_1closed
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_node_failure
 * Signature: ([BZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1node_1failure
  (JNIEnv *, jclass, jbyteArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkUpdate_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkUpdate_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetGraphMsgHandler_as_EventHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetGraphMsgHandler_1as_1EventHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetGraphMsgHandler_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetGraphMsgHandler_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetGraphMsgHandler_new
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetGraphMsgHandler_1new
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetGraphMsgHandler_add_chain_access
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetGraphMsgHandler_1add_1chain_1access
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetGraphMsgHandler_as_RoutingMessageHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetGraphMsgHandler_1as_1RoutingMessageHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetGraphMsgHandler_as_MessageSendEventsProvider
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetGraphMsgHandler_1as_1MessageSendEventsProvider
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_get_last_update
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1get_1last_1update
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_set_last_update
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1set_1last_1update
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_get_enabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1get_1enabled
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_set_enabled
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1set_1enabled
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_get_cltv_expiry_delta
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_set_cltv_expiry_delta
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_get_htlc_maximum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1get_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_set_htlc_maximum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1set_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_get_fees
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1get_1fees
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_set_fees
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1set_1fees
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_get_last_update_message
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1get_1last_1update_1message
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_set_last_update_message
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1set_1last_1update_1message
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_new
 * Signature: (IZSJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1new
  (JNIEnv *, jclass, jint, jboolean, jshort, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DirectionalChannelInfo_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DirectionalChannelInfo_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_node_one
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1node_1one
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_node_one
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1node_1one
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_one_to_two
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1one_1to_1two
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_one_to_two
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1one_1to_1two
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_node_two
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1node_1two
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_node_two
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1node_1two
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_two_to_one
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1two_1to_1one
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_two_to_one
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1two_1to_1one
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_capacity_sats
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1capacity_1sats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_capacity_sats
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1capacity_1sats
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_get_announcement_message
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1get_1announcement_1message
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_set_announcement_message
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1set_1announcement_1message
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelInfo_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelInfo_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RoutingFees_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_get_base_msat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_RoutingFees_1get_1base_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_set_base_msat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RoutingFees_1set_1base_1msat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_get_proportional_millionths
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_RoutingFees_1get_1proportional_1millionths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_set_proportional_millionths
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RoutingFees_1set_1proportional_1millionths
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_new
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingFees_1new
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RoutingFees_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingFees_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingFees_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingFees_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RoutingFees_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RoutingFees_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RoutingFees_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_get_last_update
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1get_1last_1update
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_set_last_update
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1set_1last_1update
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_get_rgb
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1get_1rgb
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_set_rgb
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1set_1rgb
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_get_alias
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1get_1alias
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_set_alias
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1set_1alias
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_set_addresses
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1set_1addresses
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_get_announcement_message
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1get_1announcement_1message
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_set_announcement_message
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1set_1announcement_1message
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_new
 * Signature: (JI[B[B[JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1new
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jbyteArray, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeAnnouncementInfo_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeAnnouncementInfo_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeInfo_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_set_channels
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeInfo_1set_1channels
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_get_lowest_inbound_channel_fees
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeInfo_1get_1lowest_1inbound_1channel_1fees
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_set_lowest_inbound_channel_fees
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeInfo_1set_1lowest_1inbound_1channel_1fees
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_get_announcement_info
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeInfo_1get_1announcement_1info
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_set_announcement_info
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NodeInfo_1set_1announcement_1info
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_new
 * Signature: ([JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeInfo_1new
  (JNIEnv *, jclass, jlongArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeInfo_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeInfo_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NodeInfo_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NodeInfo_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NodeInfo_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_read_only
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1read_1only
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_node_from_announcement
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1node_1from_1announcement
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_node_from_unsigned_announcement
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1node_1from_1unsigned_1announcement
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_channel_from_announcement
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1channel_1from_1announcement
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_channel_from_unsigned_announcement
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1channel_1from_1unsigned_1announcement
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_close_channel_from_update
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1close_1channel_1from_1update
  (JNIEnv *, jclass, jlong, jlong, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_fail_node
 * Signature: (J[BZ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1fail_1node
  (JNIEnv *, jclass, jlong, jbyteArray, jboolean);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_remove_stale_channels_with_time
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1remove_1stale_1channels_1with_1time
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_channel
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1channel
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    NetworkGraph_update_channel_unsigned
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_NetworkGraph_1update_1channel_1unsigned
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ReadOnlyNetworkGraph_get_addresses
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ReadOnlyNetworkGraph_1get_1addresses
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_node_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1node_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_node_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1node_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_channel_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1channel_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_channel_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1channel_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_fee_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1fee_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_fee_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1fee_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_get_cltv_expiry_delta
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_RouteHop_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_set_cltv_expiry_delta
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHop_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_new
 * Signature: ([BJJJJI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlong, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RouteHop_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RouteHop_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHop_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHop_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Route_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_get_paths
 * Signature: (J)[[J
 */
JNIEXPORT jobjectArray JNICALL Java_org_ldk_impl_bindings_Route_1get_1paths
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_set_paths
 * Signature: (J[[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Route_1set_1paths
  (JNIEnv *, jclass, jlong, jobjectArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_get_payee
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1get_1payee
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_set_payee
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Route_1set_1payee
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_new
 * Signature: ([[JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1new
  (JNIEnv *, jclass, jobjectArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Route_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_get_total_fees
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1get_1total_1fees
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_get_total_amount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1get_1total_1amount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Route_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Route_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Route_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_get_payee
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1get_1payee
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_set_payee
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteParameters_1set_1payee
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_get_final_value_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1get_1final_1value_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_set_final_value_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteParameters_1set_1final_1value_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_get_final_cltv_expiry_delta
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ldk_impl_bindings_RouteParameters_1get_1final_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_set_final_cltv_expiry_delta
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteParameters_1set_1final_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_new
 * Signature: (JJI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1new
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RouteParameters_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteParameters_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteParameters_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Payee_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_get_pubkey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Payee_1get_1pubkey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_set_pubkey
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Payee_1set_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_get_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1get_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_set_features
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Payee_1set_1features
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_get_route_hints
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Payee_1get_1route_1hints
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_set_route_hints
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Payee_1set_1route_1hints
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_get_expiry_time
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1get_1expiry_1time
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_set_expiry_time
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Payee_1set_1expiry_1time
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_new
 * Signature: ([BJ[JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlongArray, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Payee_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Payee_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_from_node_id
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1from_1node_1id
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payee_for_keysend
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Payee_1for_1keysend
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHint_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_get_a
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_RouteHint_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_set_a
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHint_1set_1a
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_new
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHint_1new
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHint_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHint_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHint_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RouteHint_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RouteHint_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHint_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHint_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_get_src_node_id
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1get_1src_1node_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_set_src_node_id
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1set_1src_1node_1id
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_get_short_channel_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1get_1short_1channel_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_set_short_channel_id
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1set_1short_1channel_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_get_fees
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1get_1fees
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_set_fees
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1set_1fees
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_get_cltv_expiry_delta
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1get_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_set_cltv_expiry_delta
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1set_1cltv_1expiry_1delta
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_get_htlc_minimum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1get_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_set_htlc_minimum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1set_1htlc_1minimum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_get_htlc_maximum_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1get_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_set_htlc_maximum_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1set_1htlc_1maximum_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_new
 * Signature: ([BJJSJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1new
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jshort, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RouteHintHop_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RouteHintHop_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    find_route
 * Signature: ([BJJ[JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_find_1route
  (JNIEnv *, jclass, jbyteArray, jlong, jlong, jlongArray, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Score_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Score_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    LockableScore_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_LockableScore_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MultiThreadedLockableScore_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MultiThreadedLockableScore_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MultiThreadedLockableScore_new
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MultiThreadedLockableScore_1new
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Scorer_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Scorer_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_get_base_penalty_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1get_1base_1penalty_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_set_base_penalty_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1set_1base_1penalty_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_get_failure_penalty_msat
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1get_1failure_1penalty_1msat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_set_failure_penalty_msat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1set_1failure_1penalty_1msat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_get_overuse_penalty_start_1024th
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1get_1overuse_1penalty_1start_11024th
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_set_overuse_penalty_start_1024th
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1set_1overuse_1penalty_1start_11024th
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_get_overuse_penalty_msat_per_1024th
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1get_1overuse_1penalty_1msat_1per_11024th
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_set_overuse_penalty_msat_per_1024th
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1set_1overuse_1penalty_1msat_1per_11024th
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_get_failure_penalty_half_life
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1get_1failure_1penalty_1half_1life
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_set_failure_penalty_half_life
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1set_1failure_1penalty_1half_1life
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_new
 * Signature: (JJSJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1new
  (JNIEnv *, jclass, jlong, jlong, jshort, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Scorer_new
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Scorer_1new
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Scorer_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Scorer_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ScoringParameters_default
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ScoringParameters_1default
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Scorer_as_Score
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Scorer_1as_1Score
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Scorer_write
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Scorer_1write
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Scorer_read
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Scorer_1read
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FilesystemPersister_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_FilesystemPersister_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FilesystemPersister_new
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FilesystemPersister_1new
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FilesystemPersister_get_data_dir
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_FilesystemPersister_1get_1data_1dir
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FilesystemPersister_persist_manager
 * Signature: (Ljava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FilesystemPersister_1persist_1manager
  (JNIEnv *, jclass, jstring, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FilesystemPersister_read_channelmonitors
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FilesystemPersister_1read_1channelmonitors
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    FilesystemPersister_as_Persist
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_FilesystemPersister_1as_1Persist
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BackgroundProcessor_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_BackgroundProcessor_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManagerPersister_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ChannelManagerPersister_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BackgroundProcessor_start
 * Signature: (JJJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BackgroundProcessor_1start
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BackgroundProcessor_join
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BackgroundProcessor_1join
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    BackgroundProcessor_stop
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_BackgroundProcessor_1stop
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    check_platform
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_check_1platform
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Invoice_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Invoice_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Invoice_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Invoice_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawInvoice_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SignedRawInvoice_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawInvoice_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SignedRawInvoice_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawInvoice_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawInvoice_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawInvoice_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawInvoice_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RawInvoice_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_get_data
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawInvoice_1get_1data
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_set_data
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RawInvoice_1set_1data
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RawInvoice_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawInvoice_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawInvoice_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RawDataPart_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_get_timestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawDataPart_1get_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_set_timestamp
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RawDataPart_1set_1timestamp
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RawDataPart_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawDataPart_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawDataPart_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawDataPart_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_clone
 * Signature: (J)Lorg/ldk/enums/SiPrefix;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SiPrefix_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_milli
 * Signature: ()Lorg/ldk/enums/SiPrefix;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SiPrefix_1milli
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_micro
 * Signature: ()Lorg/ldk/enums/SiPrefix;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SiPrefix_1micro
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_nano
 * Signature: ()Lorg/ldk/enums/SiPrefix;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SiPrefix_1nano
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_pico
 * Signature: ()Lorg/ldk/enums/SiPrefix;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SiPrefix_1pico
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SiPrefix_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_multiplier
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SiPrefix_1multiplier
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_clone
 * Signature: (J)Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Currency_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_bitcoin
 * Signature: ()Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Currency_1bitcoin
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_bitcoin_testnet
 * Signature: ()Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Currency_1bitcoin_1testnet
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_regtest
 * Signature: ()Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Currency_1regtest
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_simnet
 * Signature: ()Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Currency_1simnet
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_signet
 * Signature: ()Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Currency_1signet
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Currency_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Currency_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sha256_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Sha256_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sha256_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sha256_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sha256_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sha256_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sha256_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Sha256_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Sha256_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Sha256_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Description_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Description_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Description_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Description_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Description_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_get_a
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_set_a
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1set_1a
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_new
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1new
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PayeePubKey_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PayeePubKey_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiry_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiry_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiry_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiry_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiry_set_a
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiry_1set_1a
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiry_new
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiry_1new
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiry_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiry_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiry_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiry_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiry_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiry_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    MinFinalCltvExpiry_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_MinFinalCltvExpiry_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Fallback_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Fallback_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Fallback_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_seg_wit_program
 * Signature: (B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Fallback_1seg_1wit_1program
  (JNIEnv *, jclass, jbyte, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_pub_key_hash
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Fallback_1pub_1key_1hash
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_script_hash
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Fallback_1script_1hash
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Fallback_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Fallback_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Fallback_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceSignature_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoiceSignature_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceSignature_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceSignature_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceSignature_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoiceSignature_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoiceSignature_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_InvoiceSignature_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawInvoice_into_parts
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawInvoice_1into_1parts
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawInvoice_raw_invoice
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawInvoice_1raw_1invoice
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawInvoice_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_SignedRawInvoice_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawInvoice_signature
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawInvoice_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawInvoice_recover_payee_pub_key
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawInvoice_1recover_1payee_1pub_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawInvoice_check_signature
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SignedRawInvoice_1check_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RawInvoice_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_payment_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawInvoice_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_description
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawInvoice_1description
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_payee_pub_key
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawInvoice_1payee_1pub_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_description_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawInvoice_1description_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_expiry_time
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawInvoice_1expiry_1time
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_min_final_cltv_expiry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawInvoice_1min_1final_1cltv_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_payment_secret
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_RawInvoice_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawInvoice_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_private_routes
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_RawInvoice_1private_1routes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_amount_pico_btc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RawInvoice_1amount_1pico_1btc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RawInvoice_currency
 * Signature: (J)Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_RawInvoice_1currency
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_from_unix_timestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1from_1unix_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_from_system_time
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1from_1system_1time
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_as_unix_timestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1as_1unix_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PositiveTimestamp_as_time
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PositiveTimestamp_1as_1time
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_into_signed_raw
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Invoice_1into_1signed_1raw
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_check_signature
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Invoice_1check_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_from_signed
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Invoice_1from_1signed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_timestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Invoice_1timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_payment_hash
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Invoice_1payment_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_payee_pub_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Invoice_1payee_1pub_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_payment_secret
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Invoice_1payment_1secret
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_features
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Invoice_1features
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_recover_payee_pub_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ldk_impl_bindings_Invoice_1recover_1payee_1pub_1key
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_expiry_time
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Invoice_1expiry_1time
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_is_expired
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_Invoice_1is_1expired
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_min_final_cltv_expiry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Invoice_1min_1final_1cltv_1expiry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_private_routes
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Invoice_1private_1routes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_route_hints
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_ldk_impl_bindings_Invoice_1route_1hints
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_currency
 * Signature: (J)Lorg/ldk/enums/Currency;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_Invoice_1currency
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_amount_milli_satoshis
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Invoice_1amount_1milli_1satoshis
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_new
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Description_1new
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Description_into_inner
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Description_1into_1inner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_from_seconds
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1from_1seconds
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_from_duration
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1from_1duration
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_as_seconds
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1as_1seconds
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ExpiryTime_as_duration
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ExpiryTime_1as_1duration
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_new
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1new
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PrivateRoute_into_inner
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PrivateRoute_1into_1inner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_clone
 * Signature: (J)Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_description_too_long
 * Signature: ()Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1description_1too_1long
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_route_too_long
 * Signature: ()Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1route_1too_1long
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_timestamp_out_of_bounds
 * Signature: ()Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1timestamp_1out_1of_1bounds
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_expiry_time_out_of_bounds
 * Signature: ()Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1expiry_1time_1out_1of_1bounds
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_invalid_amount
 * Signature: ()Lorg/ldk/enums/CreationError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_CreationError_1invalid_1amount
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_CreationError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    CreationError_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_CreationError_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_clone
 * Signature: (J)Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SemanticError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_no_payment_hash
 * Signature: ()Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SemanticError_1no_1payment_1hash
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_multiple_payment_hashes
 * Signature: ()Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SemanticError_1multiple_1payment_1hashes
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_no_description
 * Signature: ()Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SemanticError_1no_1description
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_multiple_descriptions
 * Signature: ()Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SemanticError_1multiple_1descriptions
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_no_payment_secret
 * Signature: ()Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SemanticError_1no_1payment_1secret
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_multiple_payment_secrets
 * Signature: ()Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SemanticError_1multiple_1payment_1secrets
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_invalid_features
 * Signature: ()Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SemanticError_1invalid_1features
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_invalid_recovery_id
 * Signature: ()Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SemanticError_1invalid_1recovery_1id
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_invalid_signature
 * Signature: ()Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SemanticError_1invalid_1signature
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_imprecise_amount
 * Signature: ()Lorg/ldk/enums/SemanticError;
 */
JNIEXPORT jobject JNICALL Java_org_ldk_impl_bindings_SemanticError_1imprecise_1amount
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SemanticError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SemanticError_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_SemanticError_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_sign_error
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1sign_1error
  (JNIEnv *, jclass);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_creation_error
 * Signature: (Lorg/ldk/enums/CreationError;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1creation_1error
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignOrCreationError_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_SignOrCreationError_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoicePayer_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoicePayer_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Payer_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Payer_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Router_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_Router_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryAttempts_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RetryAttempts_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryAttempts_get_a
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RetryAttempts_1get_1a
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryAttempts_set_a
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_RetryAttempts_1set_1a
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryAttempts_new
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RetryAttempts_1new
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryAttempts_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RetryAttempts_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryAttempts_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RetryAttempts_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryAttempts_eq
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ldk_impl_bindings_RetryAttempts_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    RetryAttempts_hash
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_RetryAttempts_1hash
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentError_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_PaymentError_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentError_clone_ptr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentError_1clone_1ptr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentError_clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentError_1clone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentError_invoice
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentError_1invoice
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentError_routing
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentError_1routing
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    PaymentError_sending
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_PaymentError_1sending
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoicePayer_new
 * Signature: (JJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoicePayer_1new
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoicePayer_pay_invoice
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoicePayer_1pay_1invoice
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoicePayer_pay_zero_value_invoice
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoicePayer_1pay_1zero_1value_1invoice
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoicePayer_pay_pubkey
 * Signature: (J[B[BJI)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoicePayer_1pay_1pubkey
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jlong, jint);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoicePayer_remove_cached_payment
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_InvoicePayer_1remove_1cached_1payment
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    InvoicePayer_as_EventHandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_InvoicePayer_1as_1EventHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    create_invoice_from_channelmanager
 * Signature: (JJLorg/ldk/enums/Currency;JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_create_1invoice_1from_1channelmanager
  (JNIEnv *, jclass, jlong, jlong, jobject, jlong, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DefaultRouter_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ldk_impl_bindings_DefaultRouter_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DefaultRouter_new
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DefaultRouter_1new
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    DefaultRouter_as_Router
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_DefaultRouter_1as_1Router
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    ChannelManager_as_Payer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_ChannelManager_1as_1Payer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_from_str
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SiPrefix_1from_1str
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_from_str
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_Invoice_1from_1str
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawInvoice_from_str
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_ldk_impl_bindings_SignedRawInvoice_1from_1str
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Invoice_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Invoice_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SignedRawInvoice_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_SignedRawInvoice_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    Currency_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_Currency_1to_1str
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_ldk_impl_bindings
 * Method:    SiPrefix_to_str
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ldk_impl_bindings_SiPrefix_1to_1str
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
